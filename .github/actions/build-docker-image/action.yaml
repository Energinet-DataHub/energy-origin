name: 'Build Docker Image'
description: 'Builds and pushes Docker images for projects'

inputs:
  base-path:
    description: 'Base path to the project'
    required: true

  project:
    description: 'Project directory name'
    required: true

  dry-run:
    description: 'Flag to simulate builds'
    required: true

  sdk-version:
    description: 'SDK version for the .NET project'
    required: true

  runtime-version:
    description: 'Runtime version for the .NET project'
    required: true

  dockerfile-path:
    description: 'Path to the Dockerfile'
    required: true

runs:
  using: 'composite'

  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false

    - name: Set Docker Tag
      id: docker_tag
      shell: bash
      run: |
        # Combine all parts, convert to lowercase, and replace spaces with hyphens
        repo_name="${GITHUB_REPOSITORY,,}"
        project_name="${{ inputs.project }}" && project_name=$(echo "${project_name}" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
        tag="${repo_name}-${project_name}:pr-${GITHUB_EVENT_PULL_REQUEST_NUMBER}"
        echo "tag=${tag}" >> $GITHUB_OUTPUT

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.base-path }}/${{ inputs.project }}
        file: ${{ inputs.dockerfile-path }}
        push: ${{ inputs.dry-run == 'false' }}
        tags: ${{ steps.docker_tag.outputs.tag }}
        build-args: |
          SDK_VERSION=${{ inputs.sdk-version }}
          RUNTIME_VERSION=${{ inputs.runtime-version }}
          SUBSYSTEM=${{ inputs.base-path }}
          PROJECT=${{ inputs.project }}
