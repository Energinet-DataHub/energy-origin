name: 'Build Docker Image'
description: 'Builds and pushes Docker images for projects'

inputs:
  solution:
    description: Is the path to a solution file.
    required: true

  project:
    description: Is the path to a project file.
    required: true

  configuration:
    description: Is the path to a configuration file.
    required: true

  migrations:
    description: Is the path to a migrations file, if this project uses them.
    required: false
    default: ""

  dry-run:
    description: Perform all actions but without pushing the image
    required: false
    default: "false"

  sdk-version:
    description: Is a complete sdk version in format x.y.zzz
    required: false
    default: "8.0.204"

  runtime-version:
    description: Is a complete runtime version in format x.y.z
    required: false
    default: "8.0.4"

runs:
  using: 'composite'

  steps:

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false

    - name: Set Docker Tag
      id: docker_tag
      shell: bash
      run: |
        repo_name="${GITHUB_REPOSITORY,,}"
        project_name="${{ inputs.project }}" && project_name=$(echo "${project_name}" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
        tag="${repo_name}-${project_name}:pr-${GITHUB_EVENT_PULL_REQUEST_NUMBER}"
        echo "tag=${tag}" >> $GITHUB_OUTPUT

    - name: Build image
      uses: Energinet-Datahub/acorn-actions/actions/docker-build-and-push@v1
      with:
        dockerfile: './Dockerfile'
        image-name: ${{ env.name }}
        image-tag: ${{ env.version }}
        docker-context: .
        dry-run: ${{ inputs.dry-run }}
        build-args: |
          PROJECT=${{ inputs.project }}
          MIGRATIONS=${{ inputs.migrations }}
          SDK_VERSION=${{ env.SDK }}
          RUNTIME_VERSION=${{ env.RUNTIME }}
