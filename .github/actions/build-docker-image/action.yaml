name: 'Build Docker Image'
description: 'Builds and pushes Docker images for projects'

inputs:
  solution:
    description: Is the path to a solution file.
    required: true

  project:
    description: Is the path to a project file.
    required: true

  configuration:
    description: Is the path to a configuration file.
    required: true

  migrations:
    description: Is the path to a migrations file, if this project uses them.
    required: false
    default: ""

  dry-run:
    description: Perform all actions but without pushing the image
    required: false
    default: "false"

  sdk-version:
    description: Is a complete sdk version in format x.y.zzz
    required: false
    default: "8.0.204"

  runtime-version:
    description: Is a complete runtime version in format x.y.z
    required: false
    default: "8.0.4"

runs:
  using: 'composite'

  steps:

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false

    - name: Set Docker Tag
      id: docker_tag
      shell: bash
      run: |
        repo_name="${GITHUB_REPOSITORY,,}"
        project_name="${{ inputs.project }}"
        # Replace spaces with hyphens and convert to lowercase
        project_name="${project_name// /-}"
        project_name="${project_name,,}"
        pr_number=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)
        tag="${repo_name}-${project_name}:pr-${pr_number}"
        echo "tag=${tag}"
        echo "DOCKER_TAG=${tag}" >> $GITHUB_ENV

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.base-path }}/${{ inputs.project }}
        file: ${{ inputs.dockerfile-path }}
        push: ${{ inputs.dry-run == 'false' }}
        tags: ${{ env.DOCKER_TAG }}
        build-args: |
          SDK_VERSION=${{ inputs.sdk-version }}
          RUNTIME_VERSION=${{ inputs.runtime-version }}
          PROJECT=${{ inputs.project }}

