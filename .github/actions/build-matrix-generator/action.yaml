name: Build Matrix Generator
description: Generate build matrix based on changed project folders

outputs:
  matrix:
    description: "JSON matrix of projects that need to be built"
    value: ${{ steps.set-matrix.outputs.matrix }}

runs:
  using: composite
  steps:
    - name: Find changes in buildable projects
      id: find-changes
      uses: ./.github/actions/find-diff-action
      with:
        paths: |
          domains/*/API/**/*.csproj
          domains/*/API/**/configuration.yaml
          domains/*/Proxy/**/*.csproj
          domains/*/Proxy/**/configuration.yaml
          domains/*/Worker/**/*.csproj
          domains/*/Worker/**/configuration.yaml
          domains/*/Web/**/*.csproj
          domains/*/Web/**/configuration.yaml
          domains/*/Dockerfile
          domains/*/configuration.yaml
          domains/*/*.sln

    - name: Generate build matrix
      id: set-matrix
      shell: bash
      run: |
        CHANGES="${{ steps.find-changes.outputs.list }}"
        [ "${{ steps.find-changes.outputs.matches }}" != "true" ] && echo "matrix=[]" >> $GITHUB_OUTPUT && exit 0
        dotnet_entries=$(find domains -name "*.csproj" -print0 | xargs -0 -I{} sh -c '[[ "{}" =~ /Tests/ || "{}" =~ /Shared/ || "{}" =~ Test\.csproj$ ]] && exit 0; pd=$(dirname "{}"); dn=$(echo "$pd" | sed "s|/.*/.*$||"); pn=$(basename "$pd"); cf=$(test -f "$pd/configuration.yaml" && echo "$pd/configuration.yaml" || test -f "$(dirname "$pd")/configuration.yaml" && echo "$(dirname "$pd")/configuration.yaml" || echo ""); [[ -n "$cf" && "'"$CHANGES"'" =~ "$pd"|"$cf" ]] && echo "{\"project-name\":\"$pn\",\"build-type\":\"dotnet\",\"solution\":\"$(test -f "$dn/$(basename "$dn").sln" && echo "$dn/$(basename "$dn").sln" || test -f "$dn/$(basename "$pd").sln" && echo "$dn/$(basename "$pd").sln" || echo "")\",\"project\":\"{}\",\"configuration\":\"$cf\"}"' | tr '\n' ',' | sed 's/,$//')
        docker_entries=$(find domains -name "Dockerfile" -print0 | xargs -0 -I{} sh -c 'pd=$(dirname "{}"); pn=$(basename "$pd"); cf="$pd/configuration.yaml"; [[ -f "$cf" && "'"$CHANGES"'" =~ "$pd"|"{}" ]] && echo "{\"project-name\":\"$pn\",\"build-type\":\"docker\",\"configuration\":\"$cf\",\"dockerfile\":\"{}\",\"docker-context\":\"$pd\"}"' | tr '\n' ',' | sed 's/,$//')
        matrix_json="[$dotnet_entries$docker_entries]" | sed 's/,\]/]/g'
        echo "matrix=$matrix_json" >> $GITHUB_OUTPUT
