name: 'attest-sign'
description: 'Generate SBOM (Syft), scan (Grype), attest and sign docker image'
branding:
  icon: 'lock'
  color: 'green'

inputs:
  image_ref:
    description: |
      'form <image>@<digest>'
      'e.g. "ghcr.io/org/image@sha256:abcdef..."'
    required: true
  sbom:
    description: 'Existing SBOM in CycloneDX format, or will be generated'
    default: 'auto-generate-for-me-please.json'
  grype-category:
    description: 'Optional category name for SARIF upload'
    default: 'grype'

outputs:
  sbom:
    description: 'SBOM file path'
    value: ${{ steps.set-outputs.outputs.SBOM }}

runs:
  using: 'composite'
  steps:
    - name: Validate image ref
      shell: bash
      env:
        IMAGE_REF: ${{ inputs.image_ref }}
      run: |
        if [[ "${IMAGE_REF}" != *@sha256:* ]]; then
          echo "Image must be in the form of <image>@<digest>"
          exit 1
        fi

    - name: Parse image info
      id: parse
      shell: bash
      env:
        IMAGE_REF: ${{ inputs.image_ref }}
      run: |
        DIGEST="${IMAGE_REF#*@}"
        NAME="${IMAGE_REF%@*}"
        echo "digest=${DIGEST}" >> $GITHUB_OUTPUT
        echo "name=${NAME}" >> $GITHUB_OUTPUT

    - name: Generate SBOM
      if: ${{ inputs.sbom == 'auto-generate-for-me-please.json' }}
      uses: anchore/sbom-action@v0
      with:
        image: ${{ inputs.image_ref }}
        output-file: ${{ inputs.sbom }}
        upload-artifact: false

    - name: Scan SBOM with Grype
      id: scan
      uses: anchore/scan-action@v6
      with:
        sbom: ${{ inputs.sbom }}
        output-format: sarif
        output-file: results.sarif
        fail-build: false

    - name: Sign image (Cosign)
      uses: sigstore/cosign-installer@v3
    - shell: bash
      run: cosign sign --yes "${{ inputs.image_ref }}"

    - name: Attest SBOM using GitHub-native action
      uses: actions/attest-sbom@v1
      with:
        subject-name: ${{ steps.parse.outputs.name }}
        subject-digest: ${{ steps.parse.outputs.digest }}
        sbom-path: ${{ inputs.sbom }}
        push-to-registry: true

    - name: Set outputs
      id: set-outputs
      shell: bash
      run: echo "SBOM=${{ inputs.sbom }}" >> $GITHUB_OUTPUT

    - name: Derive a short digest id
      id: digest
      shell: bash
      env:
        IMAGE_REF: ${{ inputs.image_ref }}
      run: |
        DIGEST_ID=$(echo "${IMAGE_REF#*@}" | cut -c1-12 | tr -cd '[:alnum:]')
        echo "id=$DIGEST_ID" >> "$GITHUB_OUTPUT"

    - name: Upload SBOM artifact
      uses: actions/upload-artifact@v4
      with:
        name: sbom-${{ steps.digest.outputs.id }}
        path: ${{ inputs.sbom }}

    - name: Print scanning summary
      shell: bash
      run: |
        pipx install sarif-tools
        {
          echo \`\`\`
          sarif summary results.sarif
          echo \`\`\`
        } >> $GITHUB_STEP_SUMMARY

    - name: Upload SARIF report to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
        category: ${{ inputs.grype-category }}
