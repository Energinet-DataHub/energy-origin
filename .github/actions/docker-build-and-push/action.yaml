name: Build and push docker containers to ghcr.io
description: |
  This action will ensure the image name is lowercased and that any artifacts are available.

inputs:
  dockerfile:
    description: The path of the Dockerfile to build
    required: true
  image-name:
    description: "The full image name excluding ghcr.io/<my_container>"
    required: true
  image-tag:
    description: "The image tag"
    required: true
  docker-context:
    description: The path for the docker build context, defaults to '.'
    required: false
    default: .
  dry-run:
    description: Perform all actions but without committing changes
    required: false
    default: "false"
  build-args:
    description: List of build-time variables
    required: false

runs:
  using: composite
  steps:
    - uses: actions/download-artifact@v3
      name: Download available artifacts # this supports use of artifacts (currently only frontends)
      with:
        path: artifacts/

    - name: Resolve container image name
      shell: bash
      run: echo "LOWERCASED=$(echo 'ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@5139682d94efc37792e6b54386b5b470a68a4737
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile }}
        push: ${{ inputs.dry-run != 'true' }}
        tags: ${{ env.LOWERCASED }}:${{ inputs.image-tag }}
        build-args: SDK_VERSION=${{ inputs.sdk-version }},RUNTIME_VERSION=${{ inputs.runtime-version }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
        provenance: true
        sbom: true
