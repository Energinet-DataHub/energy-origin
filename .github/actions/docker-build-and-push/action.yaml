name: Build and push docker containers to ghcr.io
description: |
  This action will ensure the image name is lowercased and that any artifacts are available.

inputs:
  dockerfile:
    description: The path of the Dockerfile to build
    required: true
  image-name:
    description: "The full image name excluding ghcr.io/<my_container>"
    required: true
  image-tag:
    description: "The image tag"
    required: true
  docker-context:
    description: The path for the docker build context, defaults to '.'
    required: false
    default: .
  dry-run:
    description: Perform all actions but without committing changes
    required: false
    default: "false"
  build-args:
    description: List of build-time variables
    required: false

runs:
  using: composite
  steps:
    - uses: actions/download-artifact@v3
      name: Download available artifacts # this supports use of artifacts (currently only frontends)
      with:
        path: artifacts/

    - name: Resolve container image name
      shell: bash
      run: echo "LOWERCASED=$(echo 'ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@5139682d94efc37792e6b54386b5b470a68a4737
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false

    - name: Build and push Docker image
      uses: docker/build-push-action@2a7db1d68aab1a514ba647f39bcde60888a1753f
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile }}
        push: ${{ inputs.dry-run != 'true' }}
        tags: ${{ env.LOWERCASED }}:${{ inputs.image-tag }}
        build-args: ${{ inputs.build-args }}

    - name: Save the built image
      shell: bash
      run: |
        docker save ${{ env.LOWERCASED }}:${{ inputs.image-tag }} -o image.tar

    - name: Install Syft
      if: ${{ inputs.dry-run != 'true' }}
      shell: bash
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

    - name: Generate SBOM
      if: ${{ inputs.dry-run != 'true' }}
      shell: bash
      run: |
        syft --scope all-layers ${{ env.LOWERCASED }}:${{ inputs.image-tag }} -o spdx-json=sbom.spdx.json

    - uses: actions/upload-artifact@v3
      if: ${{ inputs.dry-run != 'true' }}
      with:
        name: sbom
        path: sbom.spdx.json

    - uses: actions/attest-sbom@v1
      if: ${{ inputs.dry-run != 'true' }}
      with:
        subject-path: image.tar
        subject-name: ${{ env.LOWERCASED }}:${{ inputs.image-tag }}-SBOM
        sbom-path: sbom.spdx.json

    - name: Attest Build Provenance
      uses: actions/attest-build-provenance@897ed5eab6ed058a474202017ada7f40bfa52940
      if: ${{ inputs.dry-run != 'true' }}
      with:
        subject-path: image.tar
        subject-name: ${{ env.LOWERCASED }}:${{ inputs.image-tag }}-PROVENANCE

    - name: Verify Attestations
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        echo "${{ github.token }}" | docker login gh.crio -u ${{ github.actor }} --password-stdin
        gh attestation verify oci://${{ env.LOWERCASED }}:test -R ${{ github.repository }}
