name: Build and push docker containers to ghcr.io
description: |
  This action will ensure the image name is lowercased and that any artifacts are available.

inputs:
  dockerfile:
    description: The path of the Dockerfile to build
    required: true
  image-name:
    description: "The full image name excluding ghcr.io/<my_container>"
    required: true
  image-tag:
    description: "The image tag"
    required: true
  docker-context:
    description: The path for the docker build context, defaults to '.'
    required: false
    default: .
  dry-run:
    description: Perform all actions but without committing changes
    required: false
    default: "false"
  build-args:
    description: List of build-time variables
    required: false

runs:
  using: composite
  steps:
    - uses: actions/download-artifact@v3
      name: Download available artifacts
      with:
        path: artifacts/

    - name: Resolve container image name
      shell: bash
      run: echo "LOWERCASED=$(echo 'ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@5139682d94efc37792e6b54386b5b470a68a4737
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Build Docker image
      shell: bash
      run: |
        docker buildx build . \
          --tag ${{ env.LOWERCASED }}:${{ inputs.image-tag }} \
          --file ${{ inputs.dockerfile }} \
          --output type=docker \
          --build-arg SUBSYSTEM="${{ fromJson(inputs.build-args).SUBSYSTEM }}" \
          --build-arg PROJECT="${{ fromJson(inputs.build-args).PROJECT }}" \
          --build-arg SDK_VERSION="${{ fromJson(inputs.build-args).SDK_VERSION }}" \
          --build-arg RUNTIME_VERSION="${{ fromJson(inputs.build-args).RUNTIME_VERSION }}"

    - name: Install Syft
      shell: bash
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

    - name: Scan Docker image with Syft
      shell: bash
      run: |
        syft ${{ env.LOWERCASED }}:${{ inputs.image-tag }} -o spdx-json=sbom.spdx.json

    - name: Attach SBOM to Docker image
      shell: bash
      run: |
        docker buildx imagetools create \
          ${{ env.LOWERCASED }}:${{ inputs.image-tag }} \
          --sbom ./sbom.spdx.json \
          --tag ${{ env.LOWERCASED }}:${{ inputs.image-tag }}-sbom

    - name: Push Docker image with SBOM
      shell: bash
      run: |
        docker push ${{ env.LOWERCASED }}:${{ inputs.image-tag }}-sbom
