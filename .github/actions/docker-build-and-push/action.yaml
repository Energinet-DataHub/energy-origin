name: Build and push docker containers to ghcr.io
description: |
  This action will ensure the image name is lowercased and that any artifacts are available.

inputs:
  dockerfile:
    description: The path of the Dockerfile to build
    required: true
  image-name:
    description: The full image name excluding ghcr.io/<my_container>
    required: true
  image-tag:
    description: The image tag
    required: true
  docker-context:
    description: The path for the docker build context, defaults to '.'
    required: false
    default: .
  dry-run:
    description: Perform all actions but without committing changes
    required: false
    default: "false"
  build-args:
    description: List of build-time variables
    required: false
outputs:
  digest:
    description: "The digest of the pushed image"
    value: ${{ steps.build.outputs.digest }}
  lowercased:
    description: Lowercased full image name
    value: ${{ env.LOWERCASED }}

runs:
  using: composite
  steps:
    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      name: Download available artifacts # this supports use of artifacts (currently only frontends)
      with:
        path: artifacts/

    - name: Resolve container image name
      id: resolve-name
      shell: bash
      run: |
        lowercased=$(echo "ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}" | tr '[:upper:]' '[:lower:]')
        echo "LOWERCASED=$lowercased" >> "$GITHUB_ENV"
        echo "lowercased=$lowercased" >> "$GITHUB_OUTPUT"

    - name: Log in to the Container registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      env:
        DOCKER_BUILD_SUMMARY: false
        DOCKER_BUILD_RECORD_UPLOAD: false
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile }}
        push: ${{ inputs.dry-run != 'true' }}
        sbom: false
        provenance: false
        pull: true
        tags: ${{ env.LOWERCASED }}:${{ inputs.image-tag }}
        build-args: |
          ${{ inputs.build-args }}
