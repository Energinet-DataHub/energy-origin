name: Yaml Check Incremented Version

description: Verifies that versions (semver) are incremented (or missing) when compared to main branch

inputs:
  yaml-file:
    description: The path of the yaml file in the head (feature) branch.
    required: true
  yaml-path:
    description: The yaml path containing the version to compare between the head (feature) branch and the base (main) branch.
    required: true
  base-yaml-file:
    description: "Optional: The path of the yaml version file in the base (main) branch."
    required: false
  base-yaml-path:
    description: "Optional: The path of the yaml version file in the base (main) branch."
    required: false

runs:
  using: composite

  steps:
    - name: Checkout main
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0

    - name: Get previous tag
      id: previous-tag
      shell: bash
      run: echo "result=$(yq '.${{ inputs.base-yaml-path || inputs.yaml-path }}' '${{ inputs.base-yaml-file || inputs.yaml-file }}')" >> $GITHUB_OUTPUT

    - name: Verify previous tag
      shell: bash
      run: |
        echo '${{ steps.previous-tag.outputs.result }}' | grep -qEe '^[0-9]+\.[0-9]+\.[0-9]+(-[^-]+-[^-]+)?$'
        [ $? -eq 0 ] || { echo '::notice::Invalid version on main - accepting old versions to be invalid since new versions are checked for validity'; }

    - name: Checkout branch
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    - name: Get current tag
      id: current-tag
      shell: bash
      run: echo "result=$(yq '.${{ inputs.yaml-path }}' '${{ inputs.yaml-file }}')" >> $GITHUB_OUTPUT

    - name: Verify current tag
      shell: bash
      run: |
        echo '${{ steps.current-tag.outputs.result }}' | grep -qEe '^[0-9]+\.[0-9]+\.[0-9]+(-[^-]+-[^-]+)?$'
        [ $? -eq 0 ] || { echo '::warning::Invalid version'; exit 1; }

    - name: Verify incremented version
      if: ${{ steps.is-prev-tag-valid.outcome == 'success' }}
      shell: bash
      env:
        previous: ${{ steps.previous-tag.outputs.result }}
        current: ${{ steps.current-tag.outputs.result }}
      run: |
        echo '::group::Resolved versions'
        printf '%s - previous version\n%s - current version\n' "$previous" "$current"
        echo '::endgroup::'

        [ "$previous" = "$current" ] && {
          echo '::error::Version must be different.'
          exit 1
        }

        verify=$(printf '%s\n%s' "$previous" "$current" | sort -t '.' -k 1,1 -k 2,2 -k 3,3 -k 4,4 -k 5,5 -g | tail -n1)
        [ "$previous" = "$verify" ] && {
          echo '::error::The version ${current} must be an increment of the current version on main ${previous}.'
          exit 1
        }
