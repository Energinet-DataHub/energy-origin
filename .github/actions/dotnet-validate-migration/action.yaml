name: Dotnet Validate Migration

description: Verifies migration SQL is updated

inputs:
  paths:
    description: The paths of all projects and tests to validate
    required: true

  dotnet-version:
    description: The version of dotnet to use
    default: 7.0.x
    required: true

  sql-file:
    description: The path of a commited sql file
    required: true

runs:
  using: composite

  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Print dotnet information
      shell: bash
      run: dotnet --info

    - name: Print dotnet version
      shell: bash
      run: dotnet --version

    - name: Create solution from projects
      shell: bash
      env:
        PATHS: ${{ inputs.paths }}
      run: |
        rm -f *.sln || true
        dotnet new sln
        echo "$PATHS" | while read item; do
          dotnet sln add "$item"
        done

    - name: Validate migration
      shell: bash
      env:
        PATHS: ${{ inputs.paths }}
        COMMITED_SQL_FILE: ${{ inputs.sql-file }}
      run: |
        PROJECT=$(echo "$PATHS" | head -n1)
        GENERATED_SQL_FILE=/tmp/current.sql
        dotnet list package --format=json | grep 'Microsoft.EntityFrameworkCore"' >/dev/null || exit 0
        echo a
        dotnet tool install --global dotnet-ef >/dev/null
        echo b
        dotnet ef migrations script --project "$PROJECT" -i -o "$GENERATED_SQL_FILE"

        cat < "$GENERATED_SQL_FILE" | sed '/INSERT INTO "__EFMigrationsHistory"/,/);$/d' > /tmp/a
        cat < "$COMMITED_SQL_FILE" | sed '/INSERT INTO "__EFMigrationsHistory"/,/);$/d' > /tmp/b
        diff -q /tmp/a /tmp/b >/dev/null || { echo "Unexpected difference:"; diff /tmp/a /tmp/b; exit 1; }
