name: Dotnet Validate

description: Lints and tests a domain.

inputs:
  paths:
    description: The paths of all projects and tests to validate
    required: true

  dotnet-version:
    description: The version of dotnet to use
    default: 7.0.x
    required: true

  pin-version:
    description: Pin dotnet version
    default: "false"
    required: false

runs:
  using: composite

  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Create solution from projects
      shell: bash
      env:
        PATHS: ${{ inputs.paths }}
      run: |
        rm -f *.sln || true
        dotnet new sln
        echo "$PATHS" | while read item; do
          dotnet sln add "$item"
        done

    - name: Pin version ${{ inputs.dotnet-version }}
      shell: bash
      env:
        VERSION: ${{ inputs.dotnet-version }}
      # if: ${{ inputs.pin-version }}
      run: printf '{"sdk":{"rollForward":"disable","version":"%s"}}' "$VERSION" > global.json

    - name: Print dotnet information
      shell: bash
      run: dotnet --info

    - name: Print dotnet version
      shell: bash
      run: dotnet --version

    - name: Restore
      shell: bash
      run: dotnet restore

    - name: Lint
      shell: bash
      run: dotnet format --verify-no-changes -v diag

    - name: Test
      shell: bash
      run: dotnet test --no-restore --verbosity normal -warnaserror
