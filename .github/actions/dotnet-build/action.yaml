name: Dotnet - Build
description: Build a dotnet project

inputs:
  solution:
    description: Is the path to a solution file.
    required: true

  project:
    description: Is the path to a project file.
    required: true

  configuration:
    description: Is the path to a configuration file.
    required: true

  dry-run:
    description: Perform all actions but without pushing the image
    required: false
    default: "false"

  sdk-version:
    description: Is a complete sdk version in format x.y.zzz
    required: false
    default: ""

  runtime-version:
    description: Is a complete runtime version in format x.y.z
    required: false
    default: ""

outputs:
  image-name:
    description: The resolved image name
    value: ${{ steps.build-image.outputs.name }}
  image-digest:
    description: The digest of the built image
    value: ${{ steps.build-image.outputs.digest }}

runs:
  using: composite
  steps:
    - name: Load - global.json
      shell: bash
      run: |
        DIRECTORY=$(dirname '${{ inputs.solution }}')
        test -f "$DIRECTORY/global.json" || exit 0
        echo "DIRECTORY=$DIRECTORY" | tee -a $GITHUB_ENV
        echo "SDK=$(jq -rc '.sdk.version' "$DIRECTORY/global.json")" | tee -a $GITHUB_ENV
        echo "RUNTIME=$(jq -rc '.runtime.version' "$DIRECTORY/global.json")" | tee -a $GITHUB_ENV

    - name: Overwrite - if given optional input
      shell: bash
      run: |
        if [ ! -z "${{ inputs.sdk-version }}" ]; then
          echo "SDK=${{ inputs.sdk-version }}" | tee -a $GITHUB_ENV
        fi
        if [ ! -z "${{ inputs.runtime-version }}" ]; then
          echo "RUNTIME=${{ inputs.runtime-version }}" | tee -a $GITHUB_ENV
        fi

    - name: Fail - if versions are not present
      shell: bash
      run: |
        set +e
        ! test -z "${{ env.SDK }}"
        ! test -z "${{ env.RUNTIME }}"

    - name: Fetch Dockerfile
      shell: bash
      run: cp ./Dockerfile.simplified ./Dockerfile

    - name: Resolve image version
      uses: Energinet-DataHub/.github/.github/actions/docker-image-version@83315db621b8631cc0db734ad6f1499add009b46 # v14.38.4

    - name: Resolve image name
      id: resolve-name
      shell: bash
      run: echo "name=$(yq '.name' '${{ inputs.configuration }}')" | tee -a $GITHUB_ENV

    - name: Build image
      id: build-image
      uses: ./.github/actions/docker-build-and-push
      with:
        dockerfile: Dockerfile
        image-name: ${{ env.name }}
        image-tag: ${{ env.version }}
        docker-context: .
        dry-run: ${{ inputs.dry-run }}
        build-args: |
          PROJECT=${{ inputs.project }}
          SDK_VERSION=${{ env.SDK }}
          RUNTIME_VERSION=${{ env.RUNTIME }}

    - name: Scan image
      uses: ./.github/actions/docker-scan
      with:
        image-name: ${{ env.name }}
        image-tag: ${{ env.version }}
        image-digest: ${{ steps.build-image.outputs.digest }}
        upload-sarif: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
