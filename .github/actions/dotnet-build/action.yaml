name: Dotnet - Build
description: Build a dotnet project

inputs:
  solution:
    description: Is the path to a solution file.
    required: true

  project:
    description: Is the path to a project file.
    required: true

  configuration:
    description: Is the path to a configuration file.
    required: true

  dry-run:
    description: Perform all actions but without pushing the image
    required: false
    default: "false"

  sdk-version:
    description: Is a complete sdk version in format x.y.zzz
    required: false
    default: ""

  runtime-version:
    description: Is a complete runtime version in format x.y.z
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Load - global.json
      shell: bash
      run: |
        DIRECTORY=$(dirname '${{ inputs.solution }}')
        test -f "$DIRECTORY/global.json" || exit 0
        echo "DIRECTORY=$DIRECTORY" | tee -a $GITHUB_ENV
        echo "SDK=$(jq -rc '.sdk.version' "$DIRECTORY/global.json")" | tee -a $GITHUB_ENV
        echo "RUNTIME=$(jq -rc '.runtime.version' "$DIRECTORY/global.json")" | tee -a $GITHUB_ENV

    - name: Overwrite - if given optional input
      shell: bash
      run: |
        if [ ! -z "${{ inputs.sdk-version }}" ]; then
          echo "SDK=${{ inputs.sdk-version }}" | tee -a $GITHUB_ENV
        fi
        if [ ! -z "${{ inputs.runtime-version }}" ]; then
          echo "RUNTIME=${{ inputs.runtime-version }}" | tee -a $GITHUB_ENV
        fi

    - name: Fail - if versions are not present
      shell: bash
      run: |
        set +e
        ! test -z "${{ env.SDK }}"
        ! test -z "${{ env.RUNTIME }}"

    # This outputs the sha of the commit as env.version
    - name: Resolve image version
      uses: Energinet-DataHub/acorn-actions/actions/docker-image-version@v4

    # This outputs the name of the subsystem as env.name
    - name: Resolve image name
      shell: bash
      run: echo "name=$(yq '.name' '${{ inputs.configuration }}')" | tee -a $GITHUB_ENV

    # This combines the name of the organization + the name of the subsystem, and lowercases it into env.LOWERCASED
    - name: Resolve image name
      shell: bash
      run: echo "LOWERCASED=$(echo 'ghcr.io/${{ github.repository_owner }}/${{ env.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Build melange package
      uses: ./.github/actions/melange-build
      with:
        config: .github/actions/dotnet-build/melange.yaml
        archs: x86_64
        sign-with-temporary-key: true
        signing-key-path: ./melange.rsa
        repository-path: ./packages
        environment-variables: "name=${{env.name}},version=${{env.version}},SDK=${{ env.SDK }},RUNTIME=${{ env.RUNTIME }},PROJECT=${{ env.PROJECT }}"

    - name: Generate apko image, provenance, SBOM, sign image, and push it
      uses: ./.github/actions/apko-snapshot
      with:
        config: .github/actions/dotnet-build/apko.yaml
        base-tag: ${{ env.LOWERCASED }}
        target-tag: ${{ env.version }}
