name: Package and release helm chart
description: |
  Packages and creates a release with the chart,
  and commits chart into helm registry.
inputs:
  chart_folder:
    description: Path to the folder containing the chart.
    required: true
  chart_version:
    description: Override the chart version to a specific version
    required: true
  include_image_name:
    description: Add the name of the image to the name of a chart.
    required: false
    default: "false"

outputs:
  chart_name:
    description: The name of the chart that was released.
    value: ${{ steps.chart-info.outputs.chart-name }}
  chart_version:
    description: The version of the chart that was released.
    value: ${{ steps.chart-info.outputs.version }}

runs:
  using: composite
  steps:
    - name: Get info from Chart.yaml
      id: chart-info
      uses: ./.github/actions/chart-info #TODO: Energinet-DataHub/energy-origin/.github/actions/chart-info@main
      with:
        chart-folder: ${{ inputs.chart_folder }}
        chart-version: ${{ inputs.chart_version }}
        include-image-name: ${{ inputs.include_image_name }}

    - name: Update chart dependencies
      shell: bash
      run: helm dependency update ${{ inputs.chart_folder }}

    - name: Lint chart
      shell: bash
      run: helm lint ${{ inputs.chart_folder }}

    - name: Packages chart
      shell: bash
      run: helm package --version ${{  inputs.chart_version }} ${{ inputs.chart_folder }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ steps.chart-info.outputs.tag-name }}
        release_name: Release ${{ steps.chart-info.outputs.tag-name }}
        draft: false
        prerelease: ${{ github.ref_name != 'main' }}

    - name: Add tarball to release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.chart-info.outputs.tarball-filename }}
        asset_name: ${{ steps.chart-info.outputs.tarball-filename }}
        asset_content_type: application/zip
