name: Package and release helm chart
description: |
  Packages and creates a release with the chart,
  and commits chart into helm registry.
inputs:
  chart_folder:
    description: Path to the folder containing the chart.
    required: true
  chart_repository:
    description: The repository containing the chart repository
    default: ${{ github.repository_owner }}/helm-charts
    required: false
  chart_version:
    description: Override the chart version to a specific version
    required: true
  chart_repository_branch:
    description: The branch in which to add the chart.
    required: false
    default: "gh-pages"
  deploy_key:
    description: A deploy key that has access to the chart repository.
    required: true
  include_image_name:
    description: Add the name of the image to the name of a chart.
    required: false
    default: "false"
  dry_run:
    description: Perform all actions but without committing changes
    required: false
    default: "false"

outputs:
  chart_name:
    description: The name of the chart that was released.
    value: ${{ steps.chart-info.outputs.chart-name }}
  chart_version:
    description: The version of the chart that was released.
    value: ${{ steps.chart-info.outputs.version }}

runs:
  using: composite
  steps:
    - id: helm_directory
      name: Add helm checkout directory to env
      shell: bash
      run: |
        echo "helm-checkout-directory=helm-charts" >> $GITHUB_ENV

    - name: Get info from Chart.yaml
      id: chart-info
      uses: Energinet-DataHub/energy-origin/.github/actions/chart-info@main
      with:
        chart-folder: ${{ inputs.chart_folder }}
        chart-version: ${{ inputs.chart_version }}
        include-image-name: ${{ inputs.include_image_name }}

    - id: generate_filename
      name: Generate filename
      shell: bash
      run: |
        echo ::set-output name=filename::${{ steps.chart-info.outputs.chart-name }}-${{ inputs.chart_version }}.tgz

    - name: Update chart dependencies
      shell: bash
      run: helm dependency update ${{ inputs.chart_folder }}

    - name: Lint chart
      shell: bash
      run: helm lint ${{ inputs.chart_folder }}

    - name: Packages chart
      shell: bash
      run: helm package --version ${{  inputs.chart_version }} ${{ inputs.chart_folder }}

    - name: Create Release
      id: create_release
      if: ${{ inputs.dry_run != 'true' }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ steps.chart-info.outputs.tag-name }}
        release_name: Release ${{ steps.chart-info.outputs.tag-name }}
        draft: false
        prerelease: ${{ github.ref_name != 'main' }}

    - name: Add chart.tar to release
      id: upload-release-asset
      if: ${{ inputs.dry_run != 'true' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.generate_filename.outputs.filename }}
        asset_name: ${{ steps.generate_filename.outputs.filename }}
        asset_content_type: application/zip

    - name: Checkout chart repository
      if: ${{ inputs.dry_run != 'true' }}
      uses: actions/checkout@v3
      with:
        path: ${{ env.helm-checkout-directory }}
        repository: ${{ inputs.chart_repository }}
        ssh-key: ${{ inputs.deploy_key }}
        ref: ${{ inputs.chart_repository_branch }}

    - name: Download chart tarball
      if: ${{ inputs.dry_run != 'true' }}
      shell: bash
      working-directory: ${{ env.helm-checkout-directory }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release download '${{ steps.chart-info.outputs.tag-name }}' --repo '${{ github.repository }}' --pattern '${{ steps.generate_filename.outputs.filename }}' --dir './'

    - name: Update index file for helm registry
      if: ${{ inputs.dry_run != 'true' }}
      shell: bash
      working-directory: ${{ env.helm-checkout-directory }}
      run: helm repo index .

    - name: Commit changes
      if: ${{ inputs.dry_run != 'true' }}
      id: commit
      uses: EndBug/add-and-commit@v9
      with:
        add: '["index.yaml", "${{ steps.generate_filename.outputs.filename }}"]'
        message: Updated the helm registry with file ${{ steps.generate_filename.outputs.filename }}
        push: --force
        new_branch: ${{ inputs.chart_repository_branch }}
        default_author: github_actions
        cwd: ${{ env.helm-checkout-directory }}

    - name: Verify changes were pushed
      shell: bash
      if: ${{ inputs.dry_run == 'false' && steps.commit.outputs.pushed == 'false' }}
      run: |
        echo "::error::Nothing was committed or pushed"
        exit 1
