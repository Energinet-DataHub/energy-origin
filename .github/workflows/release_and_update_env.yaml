name: CI/CD

on:
  pull_request: {}
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main
  
concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: false
      
jobs:
  dotnet_validate:
    name: dotnet validate 
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.9.0
      with:
        dotnet-version: 6.0.101

    - name: Restore
      working-directory: ./services/API
      run: dotnet restore
      
    - name: Linting
      working-directory: ./services/API
      run: dotnet format --verify-no-changes -v diag

    - name: Build
      working-directory: ./services/API
      run: dotnet build --configuration Release --no-restore

    - name: Test
      working-directory: ./services/API
      run: dotnet test

  define_build:
    name: Define build matrix 
    runs-on: ubuntu-latest
    outputs:
      chart_version: ${{ steps.get_semver.outputs.semver }}
      containers: >-
        [
          { 
            "deployment_name": "api",
            "dockerfile": "services/API/API/Dockerfile",
            "image_name": "eo-data-sync",
            "image_tag": "${{ steps.get_api_container_version.outputs.semver }}"
          }
        ]
    steps:
      - name: Get chart version
        id: get_semver
        uses: Energinet-DataHub/.github/.github/actions/get-semver@main
        with:
          yaml_file: chart/Chart.yaml
          yaml_path: version

      - name: Get container version
        id: get_api_container_version
        uses: Energinet-DataHub/.github/.github/actions/get-semver@main
        with:
          yaml_file: chart/values.yaml
          yaml_path: eo-base-helm-chart.deployments.api.image.tag

  build_container_and_release_chart:
    name: Build containers
    needs: [dotnet_validate, define_build]
    uses: Energinet-DataHub/.github/.github/workflows/build-containers-and-release-chart.yaml@main
    with:
      helm_repository: ${{ github.repository_owner }}/helm-charts
      chart_folder: chart
      chart_version: ${{ needs.define_build.outputs.chart_version }}
      containers: ${{ needs.define_build.outputs.containers }}
    secrets:
      RELEASE_CHART_TOKEN: ${{ secrets.RELEASE_CHART_TOKEN }}

  update_environment:
    name: Update env
    needs: [build_container_and_release_chart]
    #only on: push to main OR PR on 'feature/**' branch
    if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'feature/')
    uses: Energinet-DataHub/.github/.github/workflows/update-chart-in-env.yaml@main
    with:
      env_repository: ${{ github.repository_owner }}/eo-base-environment
      env_branch: ${{ github.event_name == 'push' && github.ref_name == 'main' && 'main' || github.event.pull_request.head.ref }}
      app_name: ${{ needs.build_container_and_release_chart.outputs.chart_name }}
      helm_repository: https://${{ github.repository_owner }}.github.io/helm-charts/
      chart_name: ${{ needs.build_container_and_release_chart.outputs.chart_name }}
      chart_version: ${{ needs.build_container_and_release_chart.outputs.chart_version }}
    secrets:
      UPDATE_ENV_TOKEN: ${{ secrets.UPDATE_ENV_TOKEN }}
