name: Structurizr - Update pages

on:
  workflow_call: {}
  workflow_dispatch: {}

jobs:
  setup:
    # if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    outputs:
      run: ${{ env.matched }}
    steps:
      - name: Set default value
        shell: bash
        run: echo "matched=false" >> $GITHUB_ENV

      - name: Check for file changes
        uses: CodeReaper/find-diff-action@v3
        if: github.event_name == 'push'
        id: changes
        with:
          paths: |
            .github/workflows/ci-orchestrator.yaml
            .github/workflows/structurizr-update-pages.yaml
            doc/diagrams/**.dsl

      - name: Update value
        if: github.event_name == 'push'
        shell: bash
        run: echo "matched=${{ steps.changes.outputs.matched }}" >> $GITHUB_ENV

      - name: Trigger build by workflow dispatch
        # if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: echo "matched=true" >> $GITHUB_ENV

  build:
    needs: setup
    if: ${{ needs.setup.outputs.run == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/doc/diagrams/c4-model
    env:
      OUTPUT_STRUCTURE: doc/diagrams/c4-model/views/
    services:
      structurizr-lite:
        image: structurizr/lite:latest
        ports:
          - 8080:8080
        volumes:
          - ${{ github.workspace }}:/usr/local/structurizr
        env:
          STRUCTURIZR_WORKSPACE_PATH: /doc/diagrams/c4-model
          STRUCTURIZR_WORKSPACE_FILENAME: views
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3

      - name: Prepare export-diagrams script
        run: |
          set -e
          rm -rf */
          npm i puppeteer
          curl https://raw.githubusercontent.com/structurizr/puppeteer/cf6f70da15fb18c038e052c9335970eecd77025a/export-diagrams.js --output export-diagrams.js

      - name: Render diagrams png images
        run: |
          set -e

          echo '::group::Rendering...'
          node export-diagrams.js 'http://localhost:8080/workspace/diagrams' png
          echo '::endgroup::'

          echo '::group::File listing'
          find . | grep -v node_modules
          echo '::endgroup::'

          output=$(mktemp -d)
          echo "output=$output" >> $GITHUB_ENV

          rm *-key.png || true
          mkdir -p $output/${{ env.OUTPUT_STRUCTURE }}
          mv *.png $output/${{ env.OUTPUT_STRUCTURE }}/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.output }}

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     pages: write
  #     id-token: write
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2
