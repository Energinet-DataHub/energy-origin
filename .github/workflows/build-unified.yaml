name: Build Unified

on:
  workflow_call:
    inputs:
      build-matrix:
        description: "Matrix of projects to build with their configuration"
        required: true
        type: string
      dry-run:
        description: "An indication of whether to commit/publish results"
        required: true
        type: string
      is-dependabot:
        description: "An indication of a dependabot pull request"
        required: true
        type: string

permissions: { }

jobs:
  build:
    permissions:
      actions: 'read'
      attestations: 'write'
      contents: 'write'
      id-token: 'write'
      packages: 'write'
      security-events: 'write'
    name: Build ${{ matrix.project-name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(inputs.build-matrix) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup dotnet
        if: ${{ matrix.build-type == 'dotnet' }}
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: 9.0.x

      - name: Build dotnet project
        if: ${{ matrix.build-type == 'dotnet' }}
        uses: ./.github/actions/dotnet-build
        with:
          solution: ${{ matrix.solution }}
          project: ${{ matrix.project }}
          configuration: ${{ matrix.configuration }}
          dry-run: ${{ inputs.dry-run }}

      - name: Resolve image version
        if: ${{ matrix.build-type == 'docker' }}
        uses: Energinet-DataHub/.github/.github/actions/docker-image-version@ee21233cce88e1b8be9bbf186ae903a377059aef # v14.39.1

      - name: Resolve image name
        if: ${{ matrix.build-type == 'docker' }}
        shell: bash
        run: echo "name=$(yq '.name' '${{ matrix.configuration }}')" | tee -a $GITHUB_ENV

      - name: Build and push Docker image
        if: ${{ matrix.build-type == 'docker' }}
        id: build-image
        uses: ./.github/actions/docker-build-and-push
        with:
          dockerfile: ${{ matrix.dockerfile }}
          image-name: ${{ env.name }}
          image-tag: ${{ env.version }}
          docker-context: ${{ matrix.docker-context }}
          dry-run: ${{ inputs.dry-run }}

      - name: Scan image
        if: ${{ matrix.build-type == 'docker' && inputs.dry-run != 'true' }}
        uses: ./.github/actions/docker-scan
        with:
          image-name: ${{ env.name }}
          image-tag: ${{ env.version }}
          image-digest: ${{ steps.build-image.outputs.digest }}
          upload-sarif: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
