name: CI orchestrator

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      dry-run: ${{ (github.event_name == 'push' && github.ref_name == 'main') == false && false == (github.event_name == 'pull_request' && (startsWith(github.event.pull_request.head.ref, 'preview/') || startsWith(github.event.pull_request.head.ref, 'vcluster/'))) }}
      is-dependabot: ${{ github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'dependabot/') }}
      auth: ${{ steps.auth.outputs.matches }}
      authorization: ${{ steps.authorization.outputs.matches }}
      certificates: ${{ steps.certificates.outputs.matches }}
      measurements: ${{ steps.measurements.outputs.matches }}
      oidc-mock: ${{ steps.oidc-mock.outputs.matches }}
      transfer: ${{ steps.transfer.outputs.matches }}
    steps:
      - name: Setup variables
        run: exit 0

      - name: detect auth
        id: auth
        uses: CodeReaper/find-diff-action@v3
        with:
          paths: domains/auth/

      - name: detect authorization
        id: authorization
        uses: CodeReaper/find-diff-action@v3
        with:
          paths: domains/authorization/

      - name: detect certificates
        id: certificates
        uses: CodeReaper/find-diff-action@v3
        with:
          paths: domains/certificates/

      - name: detect measurements
        id: measurements
        uses: CodeReaper/find-diff-action@v3
        with:
          paths: domains/measurements/

      - name: detect oidc-mock
        id: oidc-mock
        uses: CodeReaper/find-diff-action@v3
        with:
          paths: domains/oidc-mock/

      - name: detect transfer
        id: transfer
        uses: CodeReaper/find-diff-action@v3
        with:
          paths: domains/transfer/

  build-auth:
    needs: setup
    if: needs.setup.outputs.auth == 'true'
    uses: ./.github/workflows/build-auth.yaml
    secrets: inherit
    with:
      dry-run: ${{ needs.setup.outputs.dry-run }}
      is-dependabot: ${{ needs.setup.outputs.is-dependabot }}

  build-authorization:
    needs: setup
    if: needs.setup.outputs.authorization == 'true'
    uses: ./.github/workflows/build-authorization.yaml
    secrets: inherit
    with:
      dry-run: ${{ needs.setup.outputs.dry-run }}
      is-dependabot: ${{ needs.setup.outputs.is-dependabot }}

  build-certificates:
    needs: setup
    if: needs.setup.outputs.certificates == 'true'
    uses: ./.github/workflows/build-certificates.yaml
    secrets: inherit
    with:
      dry-run: ${{ needs.setup.outputs.dry-run }}
      is-dependabot: ${{ needs.setup.outputs.is-dependabot }}

  build-libraries:
    needs: setup
    uses: ./.github/workflows/build-libraries.yaml
    secrets: inherit
    with:
      dry-run: ${{ needs.setup.outputs.dry-run }}
      is-dependabot: ${{ needs.setup.outputs.is-dependabot }}

  build-measurements:
    needs: setup
    if: needs.setup.outputs.measurements == 'true'
    uses: ./.github/workflows/build-measurements.yaml
    secrets: inherit
    with:
      dry-run: ${{ needs.setup.outputs.dry-run }}
      is-dependabot: ${{ needs.setup.outputs.is-dependabot }}

  build-oidc-mock:
    needs: setup
    if: needs.setup.outputs.oidc-mock == 'true'
    uses: ./.github/workflows/build-oidc-mock.yaml
    secrets: inherit
    with:
      dry-run: ${{ needs.setup.outputs.dry-run }}
      is-dependabot: ${{ needs.setup.outputs.is-dependabot }}

  build-transfer:
    needs: setup
    if: needs.setup.outputs.transfer == 'true'
    uses: ./.github/workflows/build-transfer.yaml
    secrets: inherit
    with:
      dry-run: ${{ needs.setup.outputs.dry-run }}
      is-dependabot: ${{ needs.setup.outputs.is-dependabot }}

  check-licenses:
    if: ${{ github.event_name == 'pull_request' }}
    uses: ./.github/workflows/check-licenses.yml
    secrets: inherit

  check-versions:
    if: ${{ github.event_name == 'pull_request' }}
    uses: ./.github/workflows/check-versions.yml
    secrets: inherit

  dependabot-update:
    uses: ./.github/workflows/dependabot-update.yaml
    secrets: inherit

  dependabot-validate:
    uses: ./.github/workflows/dependabot-validate.yaml
    secrets: inherit

  structurizr-update-pages:
    uses: ./.github/workflows/structurizr-update-pages.yaml
    secrets: inherit

  workflow-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
        with:
          tool_versions: |
            action-validator 0.5.1
      - name: Lint Actions
        run: find .github/workflows .github/actions -type f \( -iname \*.yaml -o -iname \*.yml \) | xargs -I {} action-validator --verbose {}

  allow-merge-ci-orchestrator:
    runs-on: ubuntu-latest
    needs:
      [
        build-auth,
        build-authorization,
        build-certificates,
        build-libraries,
        build-measurements,
        build-oidc-mock,
        build-transfer,
        check-licenses,
        check-versions,
        dependabot-validate,
        dependabot-update,
        structurizr-update-pages,
        workflow-validate,
      ]
    if: always()
    steps:
      - name: Print needs
        run: |
          echo '${{ toJSON(needs) }}'
      - name: Verify if merge is allowed
        run: |
          verification=$(echo '${{ toJSON(needs) }}' | jq '.[] | select(.result != "success") | select(.result != "skipped")')
          if [[ ! -z "$verification" ]]; then
              echo "Failed"
              exit 1
          fi
