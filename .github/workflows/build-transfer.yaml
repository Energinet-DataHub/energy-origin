name: Build Transfer

on:
  push:
    branches:
      - transfer-workflow

jobs:
  define:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ env.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Define matrix (file tbd)
        shell: bash
        run: printf "matrix=%s\n" "$(jq -rc . traels.json)" >> $GITHUB_ENV

  build:
    needs: define
    strategy:
      matrix:
        items: ${{ fromJson(needs.define.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: energy-origin

      - name: Dotnet validate
        uses: Energinet-DataHub/acorn-actions/actions/dotnet-validate-solution@solution-validation
        with:
          path: energy-origin/${{ matrix.subsystem }}
          project: energy-origin/${{ matrix.subsystem }}/${{ matrix.project }}
          migrations: energy-origin/${{ matrix.subsystem }}/${{ matrix.migrations }}
          dotnet-version: ${{ matrix.sdk }}
          pin-version: true

      - uses: actions/checkout@v4
        with:
          repository: "Energinet-DataHub/acorn-actions"
          sparse-checkout: Dockerfile-simplified
          path: acorn-actions
          ref: solution-validation

      - name: Enforce assembly name
        shell: bash
        run: |
          set +e
          grep -q "<AssemblyName>" "energy-origin/${{ matrix.subsystem }}/${{ matrix.project }}"
          if [ $? -eq 0 ]; then
            sed -i "energy-origin/${{ matrix.subsystem }}/${{ matrix.project }}" -e "s|<AssemblyName>.*</AssemblyName>|<AssemblyName>main</AssemblyName>|"
          else
            sed -i "energy-origin/${{ matrix.subsystem }}/${{ matrix.project }}" -e "s|</PropertyGroup>|<AssemblyName>main</AssemblyName></PropertyGroup>|"
          fi

      - name: Resolve image version
        uses: Energinet-DataHub/acorn-actions/actions/docker-image-version@v1

      - name: Resolve image name
        run: echo "name=$(yq '.name' "${{ matrix.configuration }})" >> $GITHUB_ENV # could be duplicated in matrix to avoid bash?

      - name: Build image
        uses: Energinet-Datahub/acorn-actions/actions/docker-build-and-push@v1
        with:
          dockerfile: acorn-actions/Dockerfile.simplified
          image-name: ${{ env.name }}
          image-tag: ${{ env.version }}
          docker-context: energy-origin/${{ matrix.subsystem }}
          dry-run: true
          build-args: |
            PROJECT=${{ matrix.project }}
            SDK_VERSION=${{ matrix.sdk }}
            RUNTIME_VERSION=${{ matrix.runtime }}

      - name: Scan image
        uses: Energinet-DataHub/acorn-actions/actions/docker-scan@v1
        with:
          image-name: ${{ env.name }}
          image-tag: ${{ env.version }}
          upload-sarif: ${{ github.event_name == 'push' && github.ref_name == 'main' }}

  update:
    strategy:
      max-parallel: 1
      matrix:
        items: ${{ fromJson(needs.define.outputs.matrix) }}
    runs-on: ubuntu-latest
    name: Update environment
    needs:
      - define
      - build
    concurrency: commits-base-environment
    steps:
      - uses: actions/checkout@v4

      - name: Update environment
        uses: Energinet-DataHub/acorn-actions/actions/update-base-environment@v1
        with:
          configuration: ${{ matrix.configuration }}
          deploy_key: ${{ secrets.DEPLOY_KEY_BASE_ENVIRONMENT }}
          dry_run: true
# FIXME: all dry run arguments needs to be correctly set
