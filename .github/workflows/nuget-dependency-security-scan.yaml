name: Secure Build with SBOM and Dependency Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  workflow_call:


permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
      checks: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build Solution
        run: dotnet build Sample.sln --output buildOutput

      - name: Generate SBOM
        run: |
          curl -Lo $RUNNER_TEMP/sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
          chmod +x $RUNNER_TEMP/sbom-tool
          $RUNNER_TEMP/sbom-tool generate \
            -b ./buildOutput \
            -bc . \
            -pn "Your-Project-Name" \
            -pv "1.0.0" \
            -ps "Your-Company" \
            -nsb "https://sbom.yourcompany.com" \
            -V Verbose

      - name: Analyze NuGet Dependencies
        run: |
          dotnet list package --include-transitive --format json > dependencies.json

          echo "# Dependency Stability Report" > dependency-report.md
          echo "## Unstable Packages" >> dependency-report.md
          echo "| Package | Version | Status |" >> dependency-report.md
          echo "|---------|---------|--------|" >> dependency-report.md

          jq -r '
            .projects[].frameworks[].topLevelPackages[] |
            "\(.id) \(.resolvedVersion)"' dependencies.json | while read -r pkg version; do

            status=""
            if [[ "$version" =~ -[a-zA-Z] ]]; then
              status="Pre-release"
            elif [[ "$version" =~ ^0\. ]]; then
              status="Version < 1.0.0"
            fi

            if [ -n "$status" ]; then
              echo "| $pkg | $version | $status |" >> dependency-report.md
              echo "$pkg@$version" >> unstable-packages.txt
            fi
          done

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            buildOutput/
            dependency-report.md
            unstable-packages.txt

      - name: Create PR Comment
        if: ${{ github.event_name == 'pull_request' && (steps.check.outputs.unstable_packages_exists == 'true') }}
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('./dependency-report.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Dependency Analysis Results\n${report}`
            });

  dependency-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Validate Dependencies
        run: |
          if [ -f unstable-packages.txt ] && [ -s unstable-packages.txt ]; then
            echo "❌ Unstable dependencies detected:"
            cat unstable-packages.txt
            echo "::error::Unstable dependencies found in build artifacts"
            exit 1
          else
            echo "✅ All dependencies meet stability requirements"
          fi
