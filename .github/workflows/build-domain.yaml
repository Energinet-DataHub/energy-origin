name: Build domain

name: Build domain

on:
  workflow_call:
    inputs:
      dry-run:
        description: "An indication of whether to commit/publish results"
        required: true
        type: string
      is-dependabot:
        description: "An indication of a dependabot pull request"
        required: true
        type: string

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build_matrix.outputs.project_matrix }}

    steps:
      - uses: actions/checkout@v4

      # Removed the domain structure validation to increase flexibility

      - name: Find changed directories
        id: find_changed_dirs
        uses: futuratrepadeira/changed-files@v3.3.0
        with:
          repo_token: ${{ github.token }}
          pattern: '**/*'
          result_format: 'json'

      - name: Generate build matrix
        id: build_matrix
        run: |
          CHANGED_DIRS=$(echo '${{ steps.find_changed_dirs.outputs.modified_files }}' | jq '[.[] | select(test("^domains/[^/]+($|/)")) | split("/")[1]] | unique')
          PROJECT_MATRIX="[]"
          for DIR in $(echo $CHANGED_DIRS | jq -r '.[]'); do
            # Adjust the criteria as needed to include projects based on your structure
            if [ -f "domains/$DIR/global.json" ]; then
              PROJECT_MATRIX=$(echo $PROJECT_MATRIX | jq --arg DIR "$DIR" '. + [{"path": "domains/" + $DIR}]')
            fi
          done
          echo "::set-output name=project_matrix::$(echo $PROJECT_MATRIX)"
        shell: bash

  build-projects:
    name: Build projects
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.matrix != '[]' }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      # Simplified the build steps to focus on building without strict domain structure
      - name: Build
        run: |
          # Example build command; adjust as necessary for your project structure
          dotnet build ${{ matrix.build.path }} -c Release

      - name: Validate project
        if: ${{ (github.event_name == 'push' && github.ref_name == 'main') }} == false
        uses: ./.github/actions/dotnet-validate
        with:
          dotnet-version: ${{ matrix.build.sdkVersion }}
          pin-version: true
          paths: ${{ env.paths }}
          sql-file: ${{ env.migration }}

      - name: Ensure files and folders exists
        shell: bash
        run: mkdir "${{ env.domain }}/migrations" || true

      - name: Enforce assembly name
        shell: bash
        run: |
          set +e
          grep -q "<AssemblyName>" "${{ env.path }}"
          if [ $? -eq 0 ]; then
            sed -i "${{ env.path }}" -e "s|<AssemblyName>.*</AssemblyName>|<AssemblyName>main</AssemblyName>|"
          else
            sed -i "${{ env.path }}" -e "s|</PropertyGroup>|<AssemblyName>main</AssemblyName></PropertyGroup>|"
          fi

      - name: Build image
        uses: ./.github/actions/docker-build-and-push
        with:
          dockerfile: Dockerfile
          image-name: ${{ env.name }}
          image-tag: ${{ env.version }}
          docker-context: .
          dry-run: ${{ inputs.dry-run }}
          build-args: |
            SUBSYSTEM=${{ env.domain }}
            PROJECT=${{ env.service }}
            SDK_VERSION=${{ matrix.build.sdkVersion }}
            RUNTIME_VERSION=${{ matrix.build.runtimeVersion }}

      - name: Scan image
        uses: ./.github/actions/docker-scan
        with:
          image-name: ${{ env.name }}
          image-tag: ${{ env.version }}
          upload-sarif: ${{ github.event_name == 'push' && github.ref_name == 'main' }}

  update-environment:
    name: Update environment
    runs-on: ubuntu-latest
    needs:
      - setup
      - build-projects
    concurrency: commits-base-environment
    strategy:
      max-parallel: 1
      matrix:
        build: ${{ fromJson(needs.setup.outputs.matrix) }}
    if: ${{ inputs.is-dependabot == 'false' }}
    steps:
      - uses: actions/checkout@v4

      - name: Update environment
        uses: ./.github/actions/update-base-environment
        with:
          configuration: ${{ matrix.build.configuration }}
          deploy_key: ${{ secrets.DEPLOY_KEY_BASE_ENVIRONMENT }}
          dry_run: ${{ inputs.dry-run }}
