name: Build Subsystems

on:
  workflow_call:
    inputs:
      dry-run:
        description: "An indication of whether to commit/publish results"
        required: true
        type: string
      is-dependabot:
        description: "An indication of a dependabot pull request"
        required: true
        type: string

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Read SDK and runtime versions
        id: versions
        shell: bash
        run: |
          sdk=$(jq -r '.sdk.version      // empty' global.json)
          rt=$( jq -r '.runtime.version // empty' global.json)

          [[ -z $sdk ]] && { echo "::error::sdk.version missing in global.json"; exit 1; }
          [[ -z $rt  ]] && { echo "::error::runtime.version missing in global.json"; exit 1; }

          echo "SDK_VERSION=$sdk"     >>"$GITHUB_ENV"
          echo "RUNTIME_VERSION=$rt"  >>"$GITHUB_ENV"
          echo "sdk=$sdk"             >>"$GITHUB_OUTPUT"
          echo "rt=$rt"               >>"$GITHUB_OUTPUT"

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Generate build matrix
        id: gen
        shell: bash
        run: |
          set -euo pipefail
          sol=domains/EnergyTrackAndTrace.sln
          re='(^|/)libraries/|/Shared/|/Testing/|Tests\.csproj$'

          mapfile -t ENT < <(dotnet sln "$sol" list | awk '/\.csproj$/' | grep -Ev "$re")
          ENT+=(domains/html-pdf-generator domains/redoc)

          sdk=$SDK_VERSION
          rt=$RUNTIME_VERSION

          objs=$(for p in "${ENT[@]}"; do
                   if [[ $p == *.csproj ]]; then
                     d=$(dirname "$p")
                     while [[ $d != "." && $d != "/" && ! -f "$d/configuration.yaml" ]]; do
                       d=$(dirname "$d")
                     done
                     cfg=$d/configuration.yaml
                   else
                     cfg=$(find "$p" -maxdepth 2 -name configuration.yaml | head -n1)
                     cfg=${cfg:-$p/configuration.yaml}
                   fi
                   jq -nc --arg p "$p" --arg c "$cfg" --arg sdk "$sdk" --arg rt "$rt" \
                     '{path:$p,configuration:$c,sdkVersion:$sdk,runtimeVersion:$rt}'
                 done)

          matrix=$(printf '%s\n' "$objs" | jq -s .)

          { echo 'matrix<<EOF'; echo "$matrix"; echo 'EOF'; } >>"$GITHUB_OUTPUT"
          echo "::group::Matrix"; echo "$matrix" | jq .; echo "::endgroup::"

  build:
    needs: discover
    if: ${{ needs.discover.outputs.matrix != '[]' }}
    strategy:
      matrix:
        svc: ${{ fromJson(needs.discover.outputs.matrix) }}

    uses: ./.github/workflows/build-dotnet.yaml
    with:
      solution: domains/energytrackandtrace.sln
      project: ${{ matrix.svc.path }}
      configuration: ${{ matrix.svc.configuration }}
      dry-run: ${{ inputs.dry-run }}
      sdk-version: ${{ matrix.svc.sdkVersion }}
      runtime-version: ${{ matrix.svc.runtimeVersion }}

  update:
    permissions:
      actions: 'read'
      id-token: 'write'
      contents: 'write'
    runs-on: ubuntu-latest
    name: Update environment
    needs:
      - build
    concurrency: commits-base-environment
    if: ${{ inputs.is-dependabot == 'false' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Update environment
        uses: Energinet-DataHub/.github/.github/actions/update-base-environment@502f9383a50bc018639d7481a8fa308055d82f7a # v14.39.0
        with:
          configurations: |
            domains/admin-portal/AdminPortal.Web/configuration.yaml
            domains/authorization/Authorization.API/configuration.yaml
            domains/authorization/Proxy/configuration.yaml
            domains/certificates/Query.API/configuration.yaml
            domains/html-pdf-generator/configuration.yaml
            domains/measurements/Measurements.API/configuration.yaml
            domains/oidc-mock/API/configuration.yaml
            domains/transfer/Transfer.API/configuration.yaml
            domains/transfer/ClaimAutomation/configuration.yaml
            domains/transfer/TransferAgreementAutomation/configuration.yaml
            domains/redoc/configuration.yaml
          dry_run: ${{ inputs.dry-run }}
          github-app-id: ${{ vars.ACORN_GHA_APP_ID }}
          github-app-private-key: ${{ secrets.ACORN_GHA_PRIVATE_KEY }}

  deploy-b2c-preview:
    name: ðŸŒ€ Deploy B2C Policy for Preview
    permissions:
      actions: 'read'
      id-token: 'write'
      contents: 'write'
    runs-on: ubuntu-latest
    needs: update
    concurrency: commits-base-environment
    if: ${{ (inputs.is-dependabot == 'false' && github.event_name == 'pull_request' && (startsWith(github.event.pull_request.head.ref, 'preview/') || startsWith(github.event.pull_request.head.ref, 'vcluster/'))) || github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Template & deploy B2C custom policy
        uses: ./.github/actions/b2c-policy-deploy
        with:
          azure-tenant-id: d3803538-de83-47f3-bc72-54843a8592f2
          azure-client-id: 291fedbd-35c0-4fcb-9088-498d0c96c50d
          azure-client-secret: ${{ secrets.ENERGY_TRACK_AND_TRACE_B2C_CLIENT_SECRET_DEMO }}


