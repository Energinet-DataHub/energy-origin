name: Build Subsystems

on:
  workflow_call:
    inputs:
      dry-run:
        description: "An indication of whether to commit/publish results"
        required: true
        type: string
      is-dependabot:
        description: "An indication of a dependabot pull request"
        required: true
        type: string

jobs:
  detect:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        subsystem:
          - { name: "authorization", path: "domains/authorization", workflow: ".github/workflows/build-authorization.yaml" }
          - { name: "certificates", path: "domains/certificates", workflow: ".github/workflows/build-certificates.yaml" }
          - { name: "measurements", path: "domains/measurements", workflow: ".github/workflows/build-measurements.yaml" }
          - { name: "oidc-mock", path: "domains/oidc-mock", workflow: ".github/workflows/build-oidc-mock.yaml" }
          - { name: "transfer", path: "domains/transfer", workflow: ".github/workflows/build-transfer.yaml" }
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Check for changes in ${{ matrix.subsystem.name }}
        id: check-changes
        uses: ./.github/actions/find-diff-action
        with:
          paths: ${{ matrix.subsystem.path }}

      - name: Set output if changes detected
        if: ${{ steps.check-changes.outputs.matches == 'true' }}
        run: echo "subsystem=${{ matrix.subsystem.name }}" >> $GITHUB_ENV

  build:
    needs: detect
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect.outputs.subsystem) }}
      fail-fast: false
    steps:
      - name: Prepare workspace for artifact upload
        run: |
          # Remove all subsystem folders except the one detected by the matrix
          find domains/ -mindepth 1 -maxdepth 1 -type d ! -name "${{ matrix.name }}" ! -name "libraries" -exec rm -rf {} +

      - name: Upload subsystem and libraries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-files
          path: domains/

      - name: Trigger the corresponding build workflow
        uses: ./.github/actions/workflow-dispatch-action@v1
        with:
          workflow: ${{ matrix.workflow }}
          dry-run: ${{ inputs.dry-run }}
          is-dependabot: ${{ inputs.is-dependabot }}

  update:
    runs-on: ubuntu-latest
    name: Update environment
    needs:
      - build
    concurrency: commits-base-environment
    if: ${{ inputs.is-dependabot == 'false' }}
    steps:
      - uses: actions/checkout@v4

      - name: Update environment
        uses: Energinet-DataHub/acorn-actions/actions/update-base-environment@v1
        with:
          configurations: |
            domains/authorization/Authorization.API/configuration.yaml
            domains/authorization/Proxy/configuration.yaml
            domains/certificates/Query.API/configuration.yaml
            domains/measurements/Measurements.API/configuration.yaml
            domains/oidc-mock/API/configuration.yaml
            domains/transfer/Transfer.API/configuration.yaml
            domains/transfer/ClaimAutomation/configuration.yaml
            domains/transfer/TransferAgreementAutomation/configuration.yaml
          deploy_key: ${{ secrets.DEPLOY_KEY_BASE_ENVIRONMENT }}
          dry_run: ${{ inputs.dry-run }}
