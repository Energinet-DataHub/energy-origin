name: Build Subsystems

on:
  workflow_call:
    inputs:
      dry-run:
        description: "An indication of whether to commit/publish results"
        required: true
        type: string
      is-dependabot:
        description: "An indication of a dependabot pull request"
        required: true
        type: string

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ env.matrix }}

    steps:
      - uses: actions/checkout@v4

      - uses: CodeReaper/find-diff-action@v3
        id: diff
        with:
          paths: domains/*/

      - name: Set default matrix
        shell: bash
        run: |
          echo "matrix=[]" >> "$GITHUB_ENV"

      - name: Build relevant matrix
        if: ${{ steps.diff.outputs.list != '' }}
        shell: bash
        env:
          LIST: ${{ steps.diff.outputs.list }}
        run: |
          declare -A workflows=(
            ["authorization"]=".github/workflows/build-authorization.yaml"
            ["certificates"]=".github/workflows/build-certificates.yaml"
            ["measurements"]=".github/workflows/build-measurements.yaml"
            ["oidc-mock"]=".github/workflows/build-oidc-mock.yaml"
            ["transfer"]=".github/workflows/build-transfer.yaml"
          )

          while read domain; do
            name=$(basename $domain)
            workflow=${workflows[$name]}
            if [ -n "$workflow" ]; then
              printf '{"name":"%s","workflow":"%s"}\n' "$name" "$workflow"
            fi
          done <<< $LIST > /tmp/json

          if [ ! -s /tmp/json ]; then
            exit 0
          fi

          matrix=$(jq -sc '.' < /tmp/json)
          echo '::group::Matrix'
          echo "$matrix" | jq -r '.'
          echo '::endgroup::'

          echo "matrix=$matrix" >> "$GITHUB_ENV"

      - name: Matrix
        shell: bash
        run: |
          echo '::group::Raw'
          printf '${{ env.matrix }}\n'
          echo '::endgroup::'
          printf '${{ env.matrix }}' | jq -r '.'

  build:
    needs: detect
    if: ${{ needs.detect.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        domain: ${{ fromJson(needs.detect.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Prepare workspace for artifact upload
        run: |
          find domains/ -mindepth 1 -maxdepth 1 -type d ! -name "${{ matrix.domain.name }}" ! -name "libraries" -exec rm -rf {} +

      - name: Upload subsystem and libraries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.domain.name }}-files
          path: domains/

      - name: Trigger the corresponding build workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: ${{ matrix.domain.workflow }}
          inputs: '{ "dry-run": "${{ inputs.dry-run }}", "is-dependabot": "${{ inputs.is-dependabot }}" }'
          ref: ${{ github.ref }}

#  build-authorization:
#    needs: setup
#    if: ${{ needs.detect.outputs.matrix.name == '[authorization]' }}
#    uses: ./.github/workflows/build-authorization.yaml
#    secrets: inherit
#    with:
#      dry-run: ${{ inputs.dry-run }}
#      is-dependabot: ${{ inputs.is-dependabot }}
#
#  build-certificates:
#    needs: setup
#    if: ${{ needs.detect.outputs.matrix.name == '[certificates]' }}
#    uses: ./.github/workflows/build-certificates.yaml
#    secrets: inherit
#    with:
#      dry-run: ${{ inputs.dry-run }}
#      is-dependabot: ${{ inputs.is-dependabot }}
#
#  build-measurements:
#    needs: setup
#    if: ${{ needs.detect.outputs.matrix.name == '[measurements]' }}
#    uses: ./.github/workflows/build-measurements.yaml
#    secrets: inherit
#    with:
#      dry-run: ${{ inputs.dry-run }}
#      is-dependabot: ${{ inputs.is-dependabot }}
#
#  build-oidc-mock:
#    needs: setup
#    if: ${{ needs.detect.outputs.matrix.name == '[oidc-mock]' }}
#    uses: ./.github/workflows/build-oidc-mock.yaml
#    secrets: inherit
#    with:
#      dry-run: ${{ inputs.dry-run }}
#      is-dependabot: ${{ inputs.is-dependabot }}
#
#  build-transfer:
#    needs: setup
#    if: ${{ needs.detect.outputs.matrix.name == '[transfer]' }}
#    uses: ./.github/workflows/build-authorization.yaml
#    secrets: inherit
#    with:
#      dry-run: ${{ inputs.dry-run }}
#      is-dependabot: ${{ inputs.is-dependabot }}

  update:
    runs-on: ubuntu-latest
    name: Update environment
    needs:
      - build
    concurrency: commits-base-environment
    if: ${{ inputs.is-dependabot == 'false' }}
    steps:
      - uses: actions/checkout@v4

      - name: Update environment
        uses: Energinet-DataHub/acorn-actions/actions/update-base-environment@v1
        with:
          configurations: |
            domains/authorization/Authorization.API/configuration.yaml
            domains/authorization/Proxy/configuration.yaml
            domains/certificates/Query.API/configuration.yaml
            domains/measurements/Measurements.API/configuration.yaml
            domains/oidc-mock/API/configuration.yaml
            domains/transfer/Transfer.API/configuration.yaml
            domains/transfer/ClaimAutomation/configuration.yaml
            domains/transfer/TransferAgreementAutomation/configuration.yaml
          deploy_key: ${{ secrets.DEPLOY_KEY_BASE_ENVIRONMENT }}
          dry_run: ${{ inputs.dry-run }}
