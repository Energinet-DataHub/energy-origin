name: Build Subsystems

on:
  workflow_call:
    inputs:
      dry-run:
        description: "An indication of whether to commit/publish results"
        required: true
        type: string

      is-dependabot:
        description: "An indication of a dependabot pull request"
        required: true
        type: string

jobs:
  determine-subsystems:
    runs-on: ubuntu-latest
    outputs:
      subsystems-json: ${{ steps.detect.outputs.subsystems-json }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Modified Subsystems
        id: detect
        run: |
          echo "Before commit: ${{ github.event.before }}"
          echo "After commit: ${{ github.event.after }}"

          echo "Changed files:"
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }}

          echo "Files in domains/:"
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^domains/'

          subsystems=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '^domains/' | awk -F'/' '{print $2}' | sort -u | jq -R -s -c 'split("\n") | map(select(. != ""))')

          echo "Detected subsystems: $subsystems"
          echo "::set-output name=subsystems-json::$subsystems"


  build-and-test:
    needs: determine-subsystems
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        subsystem: ${{ fromJson(needs.determine-subsystems.outputs.subsystems-json) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Dynamically Invoke Subsystem Workflow
        uses: jenseng/dynamic-uses@v1
        with:
          uses: ${{ format('./.github/workflows/{0}-build-test.yaml', matrix.subsystem) }}
          with: |
            {
              "dry-run": "${{ inputs.dry-run }}",
              "is-dependabot": "${{ inputs.is-dependabot }}"
            }

      - name: Report Results
        if: ${{ always() }}
        run: |
          echo "Results from ${{ matrix.subsystem }}: ${{ steps.subsystem-workflow.outcome }}"
