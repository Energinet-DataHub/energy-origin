@model List<AdminPortal._Features_.GetOrganizationsQueryResponseItem>

<div class="container mt-4 mb-5">
    <div class="card shadow-sm">
        <div class="card-header bg-light border-bottom py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="h5 mb-0 text-primary d-flex align-items-center">
                    <i class="bi bi-building me-2"></i>Trial Organizations
                </h2>
            </div>
        </div>

        <div class="card-body p-4">
            <!-- Search and Filters Section -->
            <div class="mb-4 p-3 border rounded bg-light-subtle">
                <div class="row g-3 align-items-end">
                    <!-- Search Box -->
                    <div class="col-lg-6 col-md-12">
                        <label for="searchInput" class="form-label small fw-semibold text-muted">Global Search</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" id="searchInput" class="form-control"
                                   placeholder="Search by Organization, CVR, Org ID..."
                                   aria-label="Search organizations">
                            <button id="clearSearch" class="btn btn-outline-secondary" type="button" title="Clear search">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Table -->
            <div class="table-responsive">
                <table class="table table-hover table-striped table-bordered mb-0" id="organizationsTable">
                    <thead class="table-light">
                        <tr>
                            <th scope="col">Organisation Name</th>
                            <th scope="col">CVR Number</th>
                            <th scope="col">Org ID</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var org in Model)
                        {
                            <tr>
                                <td class="clickable-cell" onclick="window.location.href='@Url.Content("~/Meteringpoints?tin=" + @org.Tin)'">@org.OrganizationName</td>
                                <td class="clickable-cell" onclick="window.location.href='@Url.Content("~/Meteringpoints?tin=" + @org.Tin)'">@org.Tin</td>
                                <td class="clickable-cell" onclick="window.location.href='@Url.Content("~/Meteringpoints?tin=" + @org.Tin)'">@org.OrganizationId</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    .card-header .h5 {
        font-weight: 500;
    }

    .table th {
        font-weight: 600;
        white-space: nowrap;
        vertical-align: middle;
    }

    .table td {
        vertical-align: middle;
    }

    .filter-highlight {
        background-color: #ffe082 !important;
        font-weight: 500;
        border-radius: 2px;
    }

    .sortable {
        cursor: pointer;
        transition: background-color 0.2s;
    }
    .sortable:hover {
        background-color: #e9ecef;
    }
    .sortable .bi {
        font-size: 0.8em;
    }

    .form-label.small {
        font-size: 0.875em;
    }

    .bg-light-subtle {
        background-color: #f8f9fa !important;
    }

    .badge {
        padding: 0.4em 0.65em;
        font-size: 0.8em;
        font-weight: 500;
    }

    .clickable-cell {
        cursor: pointer;
        transition: background-color 0.2s;
    }
    .clickable-cell:hover {
        background-color: #f8f9fa;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const clearButton = document.getElementById('clearSearch');
            const table = document.getElementById('organizationsTable');
            let filterTimeout;

            function debounce(func, delay) {
                return function(...args) {
                    clearTimeout(filterTimeout);
                    filterTimeout = setTimeout(() => {
                        func.apply(this, args);
                    }, delay);
                };
            }

            function highlightMatches(text, filter) {
                if (!filter || !text) return text;
                const escapedFilter = filter.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
                const regex = new RegExp(`(${escapedFilter})`, 'gi');
                return text.replace(regex, '<span class="filter-highlight">$1</span>');
            }

            const applyFilters = debounce(function() {
                const globalFilter = searchInput.value.toLowerCase().trim();

                Array.from(table.rows).slice(1).forEach(row => {
                    const cells = row.cells;
                    let showRow = true;

                    if (globalFilter) {
                        const rowText = Array.from(cells).slice(0, 3).map(cell => cell.textContent).join(' ').toLowerCase();
                        showRow = rowText.includes(globalFilter);
                    }

                    Array.from(cells).forEach((cell, idx) => {
                        if (globalFilter && idx < 3) {
                            cell.innerHTML = highlightMatches(cell.dataset.originalHtml || cell.textContent, globalFilter);
                        } else {
                            cell.innerHTML = cell.dataset.originalHtml || cell.textContent;
                        }
                    });

                    row.style.display = showRow ? '' : 'none';
                });
            }, 300);

            searchInput.addEventListener('input', applyFilters);
            clearButton.addEventListener('click', () => {
                searchInput.value = '';
                Array.from(table.rows).slice(1).forEach(row => {
                    Array.from(row.cells).forEach(cell => {
                        cell.innerHTML = cell.dataset.originalHtml || cell.textContent;
                    });
                    row.style.display = '';
                });
                applyFilters();
            });

            Array.from(table.rows).slice(1).forEach(row => {
                Array.from(row.cells).forEach(cell => {
                    cell.dataset.originalHtml = cell.innerHTML;
                });
            });
        });
    </script>
}
