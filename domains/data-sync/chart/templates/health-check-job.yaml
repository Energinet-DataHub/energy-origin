apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-health
  namespace: {{ .Release.Namespace }}
spec:
  schedule: {{ .Values.healthCheck.schedule | quote }}
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: health-check
            image: '{{ .Values.healthCheck.image.name }}:{{ .Values.healthCheck.image.tag }}'
            imagePullPolicy: IfNotPresent
            command:
              - /bin/sh
              - -c
              - curl -v --connect-timeout 10 --fail --cert-type P12 --cert $DATAHUB2CERTIFICATEFILEPATH:$DATAHUB2CERTIFICATEFILEPASSWORD $DATAHUB2ENDPOINT
            envFrom:
              - configMapRef:
                  name: {{ required "api config map is required" .Values.apiConfigMapName }}
{{- if .Values.envFrom }}
{{- toYaml .Values.envFrom | nindent 14 }}
{{- end }}

{{- if .Values.volumeSecrets}}
            volumeMounts:
{{- range .Values.volumeSecrets }}
              - name: {{ .name }}-volume
                mountPath: "{{ required "volumeSecret .path is required" .path }}"
                readOnly: true
{{- end }}
          volumes:
{{- range .Values.volumeSecrets }}
            - name: {{ .name }}-volume
              secret:
                secretName: {{ required "volumeSecret .name is required" .name }} 
                optional: false
{{- end }}
{{- end }}
