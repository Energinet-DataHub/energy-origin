<Project>
    <Target Name="CheckNuGetPackageVersions" BeforeTargets="PrepareForBuild">
        <!-- Gather package references -->
        <ItemGroup>
            <AllPackageReferences Include="@(PackageReference)">
                <Version>%(Version)</Version>
                <Source>Direct</Source>
            </AllPackageReferences>
        </ItemGroup>

        <!-- Identify prerelease packages -->
        <ItemGroup>
            <PrereleasePackages Include="@(AllPackageReferences)"
                                Condition="$([System.String]::new('%(AllPackageReferences.Version)').Contains('-'))">
                <Message>NuGet package '%(Identity) (%(Version))' is a prerelease version</Message>
            </PrereleasePackages>
        </ItemGroup>

        <!-- Identify unstable packages -->
        <ItemGroup>
            <LowVersionPackages Include="@(AllPackageReferences)"
                                Condition="$([System.Version]::Parse($([System.Text.RegularExpressions.Regex]::Replace('%(AllPackageReferences.Version)', '-.*$', ''))).CompareTo($([System.Version]::Parse('1.0.0')))) &lt; 0">
                <Message>NuGet package '%(Identity) (%(Version))' is an unstable version</Message>
            </LowVersionPackages>
        </ItemGroup>

        <!-- Stop the build on errors -->
        <Error
                Text="%(PrereleasePackages.Message)"
                Condition="'@(PrereleasePackages)' != '' and '%(PrereleasePackages.Source)' == 'Direct'"
                File="$(MSBuildProjectFullPath)" />

        <Error
                Text="%(LowVersionPackages.Message)"
                Condition="'@(LowVersionPackages)' != '' and '%(LowVersionPackages.Source)' == 'Direct'"
                File="$(MSBuildProjectFullPath)" />
    </Target>
</Project>
