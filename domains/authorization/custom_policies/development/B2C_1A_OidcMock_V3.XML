<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
        PolicySchemaVersion="0.3.0.0"
        TenantId="datahubeouenerginet.onmicrosoft.com"
        PolicyId="B2C_1A_OidcMock_V3"
        PublicPolicyUri="http://datahubeouenerginet.onmicrosoft.com/B2C_1A_OidcMock_V3"
        DeploymentMode="Development"
        UserJourneyRecorderEndpoint="urn:journeyrecorder:applicationinsights">

    <BuildingBlocks>

        <ClaimsSchema>

            <ClaimType Id="name">
                <DisplayName>name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Name claim</UserHelpText>
            </ClaimType>

            <ClaimType Id="userPrincipalName">
                <DisplayName>UserPrincipalName</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your user name as stored in the Azure Active Directory.</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_grant_type">
                <DisplayName>self_grant_type</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Grant type used for authenticating the flow itself</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_client_id">
                <DisplayName>self_client_id</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Client id for the custom policy itself</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_client_secret">
                <DisplayName>self_client_secret</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Client secret for the custom policy itself</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_scope">
                <DisplayName>self_scope</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Scope used when authenticating the custom policy itself</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_access_token">
                <DisplayName>self_access_token</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Access token granted to the custom policy itself and used to call authoriation service</UserHelpText>
            </ClaimType>

            <ClaimType Id="mapped_sub">
                <DisplayName>mapped_sub</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Internal sub claim mapped by authorization service (MitID sub -> internal sub)</UserHelpText>
            </ClaimType>

            <ClaimType Id="org_cvr">
                <DisplayName>org_cvr</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Organization TIN (CVR in Denmark)</UserHelpText>
            </ClaimType>

            <ClaimType Id="org_name">
                <DisplayName>org_name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Organization name</UserHelpText>
            </ClaimType>

            <ClaimType Id="org_id">
                <DisplayName>org_id</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Id of users own organization</UserHelpText>
            </ClaimType>

            <ClaimType Id="org_ids">
                <DisplayName>org_ids</DisplayName>
                <DataType>stringCollection</DataType>
                <UserHelpText>List of id of organizations authorized to act on behalf of</UserHelpText>
            </ClaimType>

            <ClaimType Id="org_ids_string">
                <DisplayName>org_ids_string</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>String of org_ids space separated</UserHelpText>
            </ClaimType>

            <ClaimType Id="sub_type">
                <DisplayName>sub_type</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Type of subject (user, internal, external)</UserHelpText>
            </ClaimType>

            <ClaimType Id="scope">
                <DisplayName>Scope</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Scope claim returned from authorization service</UserHelpText>
            </ClaimType>
            <ClaimType Id="tos_accepted">
                <DisplayName>Azure B2C claim for terms of service accepted</DisplayName>
                <DataType>boolean</DataType>
                <UserHelpText>Indicates whether the terms of service have been accepted</UserHelpText>
            </ClaimType>
            <ClaimType Id="mitIDBearerToken">
                <DisplayName>MitIDBearerToken</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>MitID access token used to call userinfo endpoint</UserHelpText>
            </ClaimType>

            <ClaimType Id="email">
                <DisplayName>Email Address</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OpenIdConnect" PartnerClaimType="email"/>
                </DefaultPartnerClaimTypes>
                <UserHelpText>Email address returned by MitID userinfo endpoint</UserHelpText>
                <UserInputType>TextBox</UserInputType>
                <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9.!#$%&amp;&apos;^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$"/>
                </Restriction>
            </ClaimType>

            <ClaimType Id="givenName">
                <DisplayName>Given Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your given name (also known as first name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="surname">
                <DisplayName>Surname</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your surname (also known as family name or last name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="displayName">
                <DisplayName>Display Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your display name.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="objectId">
                <DisplayName>unique object Id for subject of the claims being returned</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="issuerUserId">
                <DisplayName>Username</DisplayName>
                <DataType>string</DataType>
                <UserHelpText/>
                <UserInputType>TextBox</UserInputType>
                <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9]+[a-zA-Z0-9_-]*$"
                             HelpText="The username you provided is not valid. It must begin with an alphabet or number and can contain alphabets, numbers and the following symbols: _ -"/>
                </Restriction>
            </ClaimType>

            <ClaimType Id="identityProvider">
                <DisplayName>Identity Provider</DisplayName>
                <DataType>string</DataType>
                <UserHelpText/>
            </ClaimType>

            <ClaimType Id="authenticationSource">
                <DisplayName>AuthenticationSource</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Specifies whether the user was authenticated at Social IDP or local account.</UserHelpText>
            </ClaimType>

            <ClaimType Id="upnUserName">
                <DisplayName>UPN User Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>The user name for creating user principal name.</UserHelpText>
            </ClaimType>

            <ClaimType Id="alternativeSecurityId">
                <DisplayName>AlternativeSecurityId</DisplayName>
                <DataType>string</DataType>
                <UserHelpText/>
            </ClaimType>

            <ClaimType Id="mailNickName">
                <DisplayName>MailNickName</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your mail nick name as stored in the Azure Active Directory.</UserHelpText>
            </ClaimType>

            <ClaimType Id="newUser">
                <DisplayName>User is new or not</DisplayName>
                <DataType>boolean</DataType>
                <UserHelpText/>
            </ClaimType>

            <ClaimType Id="refreshTokenIssuedOnDateTime">
                <DisplayName>refreshTokenIssuedOnDateTime</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Used to determine if the user should be permitted to reauthenticate silently via their existing refresh token.</AdminHelpText>
                <UserHelpText>Used to determine if the user should be permitted to reauthenticate silently via their existing refresh token.</UserHelpText>
            </ClaimType>
            <ClaimType Id="refreshTokensValidFromDateTime">
                <DisplayName>refreshTokensValidFromDateTime</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Used to determine if the user should be permitted to reauthenticate silently via their existing refresh token.</AdminHelpText>
                <UserHelpText>Used to determine if the user should be permitted to reauthenticate silently via their existing refresh token.</UserHelpText>
            </ClaimType>
            <ClaimType Id="strongAuthenticationPhoneNumber">
                <DisplayName>Phone Number</DisplayName>
                <DataType>string</DataType>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>
            <ClaimType Id="signInNames.emailAddress">
                <DisplayName>Email Address</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Email address to use for signing in.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>
            <ClaimType Id="otherMails">
                <DisplayName>Alternate Email Addresses</DisplayName>
                <DataType>stringCollection</DataType>
                <UserHelpText>Email addresses that can be used to contact the user.</UserHelpText>
            </ClaimType>
            <ClaimType Id="sub">
                <DisplayName>Subject</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OpenIdConnect" PartnerClaimType="sub" />
                </DefaultPartnerClaimTypes>
                <UserHelpText/>
            </ClaimType>
        </ClaimsSchema>

        <ClaimsTransformations>

            <ClaimsTransformation Id="CreateAlternativeSecurityId" TransformationMethod="CreateAlternativeSecurityId">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="issuerUserId" TransformationClaimType="key"/>
                    <InputClaim ClaimTypeReferenceId="identityProvider" TransformationClaimType="identityProvider"/>
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="alternativeSecurityId" TransformationClaimType="alternativeSecurityId"/>
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CreateRandomUPNUserName" TransformationMethod="CreateRandomString">
                <InputParameters>
                    <InputParameter Id="randomGeneratorType" DataType="string" Value="GUID"/>
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="upnUserName" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CreateUserPrincipalName" TransformationMethod="FormatStringClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="upnUserName" TransformationClaimType="inputClaim"/>
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="stringFormat" DataType="string" Value="cpim_{0}@{RelyingPartyTenantId}"/>
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="userPrincipalName" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="OrgIdsAsStringTransformation" TransformationMethod="StringJoin">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="org_ids" TransformationClaimType="inputClaim"/>
                </InputClaims>
                <InputParameters>
                    <InputParameter DataType="string" Id="delimiter" Value=" "/>
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="org_ids_string" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="AssertRefreshTokenIssuedLaterThanValidFromDate" TransformationMethod="AssertDateTimeIsGreaterThan">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="refreshTokenIssuedOnDateTime" TransformationClaimType="leftOperand" />
                    <InputClaim ClaimTypeReferenceId="refreshTokensValidFromDateTime" TransformationClaimType="rightOperand" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="AssertIfEqualTo" DataType="boolean" Value="false" />
                    <InputParameter Id="AssertIfRightOperandIsNotPresent" DataType="boolean" Value="true" />
                    <InputParameter Id="TreatAsEqualIfWithinMillseconds" DataType="int" Value="300000" />
                </InputParameters>
            </ClaimsTransformation>
        </ClaimsTransformations>

    </BuildingBlocks>

    <ClaimsProviders>

        <ClaimsProvider>
            <!-- The technical profile(s) defined in this section is required by the framework to be included in all custom policies. -->
            <DisplayName>Trustframework Policy Engine TechnicalProfiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="TpEngine_c3bd4fe2-1775-4013-b91d-35f16d377d13">
                    <DisplayName>Trustframework Policy Engine Default Technical Profile</DisplayName>
                    <Protocol Name="None"/>
                    <Metadata>
                        <Item Key="url">{service:te}</Item>
                    </Metadata>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <DisplayName>Session management</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SM-Noop">
                    <DisplayName>Noop Session Management Provider</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.NoopSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Token Issuer</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="JwtIssuer">
                    <DisplayName>JWT Issuer</DisplayName>
                    <Protocol Name="None"/>
                    <OutputTokenFormat>JWT</OutputTokenFormat>
                    <Metadata>
                        <Item Key="client_id">{service:te}</Item>
                        <Item Key="issuer_refresh_token_user_identity_claim_type">sub</Item>
                        <Item Key="SendTokenResponseBodyWithJsonNumbers">true</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                        <Key Id="issuer_refresh_token_key" StorageReferenceId="B2C_1A_TokenEncryptionKeyContainer"/>
                    </CryptographicKeys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Azure AD Technical Profiles</DisplayName>
            <TechnicalProfiles>

                <TechnicalProfile Id="AAD-UserWriteUsingAlternativeSecurityId">
                    <DisplayName>Azure Active Directory technical profile for handling social accounts</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                    </CryptographicKeys>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="alternativeSecurityId" PartnerClaimType="alternativeSecurityId" Required="true"/>
                    </InputClaims>
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="alternativeSecurityId"/>
                        <PersistedClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <PersistedClaim ClaimTypeReferenceId="displayName" DefaultValue="unknown"/>
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated"/>
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop"/>
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserReadUsingAlternativeSecurityId">
                    <DisplayName>Azure Active Directory</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                    </CryptographicKeys>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="alternativeSecurityId" PartnerClaimType="alternativeSecurityId" Required="true"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <OutputClaim ClaimTypeReferenceId="displayName"/>
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop"/>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <Domain>MitID.dk</Domain>
            <DisplayName>MitID</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="OidcMock-OAUTH">
                    <DisplayName>MitID</DisplayName>
                    <Protocol Name="OpenIdConnect"/>
                    <Metadata>
                        <Item Key="METADATA">https://demo.energytrackandtrace.dk/auth/oidc-mock/.well-known/openid-configuration</Item>
                        <Item Key="client_id">energy-origin-b2c</Item>
                        <Item Key="response_types">code</Item>
                        <Item Key="scope">openid ssn mitid nemlogin userinfo_token</Item>
                        <Item Key="response_mode">query</Item>
                        <Item Key="UsePolicyInRedirectUri">false</Item>
                        <Item Key="HttpBinding">POST</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="client_secret" StorageReferenceId="B2C_1A_OidcMockSecretTestClient"/>
                    </CryptographicKeys>
                    <InputClaims/>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="first_name"/>
                        <OutputClaim ClaimTypeReferenceId="mitIDBearerToken" PartnerClaimType="{oauth2:access_token}"/>
                        <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss"/>
                        <OutputClaim ClaimTypeReferenceId="name"/>
                        <OutputClaim ClaimTypeReferenceId="org_cvr"/>
                        <OutputClaim ClaimTypeReferenceId="org_name"/>
                        <OutputClaim ClaimTypeReferenceId="mapped_sub" PartnerClaimType="sub"/>
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName"/>
                        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName"/>
                        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId"/>
                    </OutputClaimsTransformations>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop"/>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Authorization consents and organization whitelist</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="clientCredentialsMethod">
                    <DisplayName>Self authentication</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ServiceUrl">https://login.microsoftonline.com/d3803538-de83-47f3-bc72-54843a8592f2/oauth2/v2.0/token</Item> <!-- ETT: d44e264e-0b26-4428-b114-7db4e2d0ac95 change this to your TenantID  -->
                        <Item Key="SendClaimsIn">Form</Item>
                        <Item Key="AuthenticationType">None</Item>
                        <Item Key="DebugMode">true</Item>
                        <Item Key="AllowInsecureAuthInProduction">true</Item>
                        <Item Key="DefaultUserMessageIfRequestFailed">Failed to obtain authorization information.</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="self_grant_type" PartnerClaimType="grant_type" DefaultValue="client_credentials"/>
                        <InputClaim ClaimTypeReferenceId="self_client_id" PartnerClaimType="client_id" DefaultValue="f00b9b4d-3c59-4c40-b209-2ef87e509f54"/> <!-- ett: ett-authorization-b2c client id: 44d0d03c-bd3f-47a9-97b2-c13eb8d8e901 -->
                        <InputClaim ClaimTypeReferenceId="self_client_secret" PartnerClaimType="client_secret" DefaultValue="GGz..."/> <!-- ett: ett-authorization-b2c client secret: bTn...  -->
                        <InputClaim ClaimTypeReferenceId="self_scope" PartnerClaimType="scope" DefaultValue="https://datahubeopenerginet.onmicrosoft.com/energy-origin/.default"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="self_access_token" PartnerClaimType="access_token"/>
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop"/>
                </TechnicalProfile>

                <TechnicalProfile Id="authorizationMethod">
                    <DisplayName>Consent</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ServiceUrl">https://demo.energytrackandtrace.dk/api/authorization/user-consent</Item>
                        <Item Key="SendClaimsIn">Body</Item>
                        <Item Key="AuthenticationType">Bearer</Item>
                        <Item Key="UseClaimAsBearerToken">self_access_token</Item>
                        <Item Key="DebugMode">true</Item>
                        <Item Key="DefaultUserMessageIfRequestFailed">Failed to obtain authorization information.</Item>
                        <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="self_access_token"/>
                        <InputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="sub"/>
                        <InputClaim ClaimTypeReferenceId="name"/>
                        <InputClaim ClaimTypeReferenceId="org_cvr"/>
                        <InputClaim ClaimTypeReferenceId="org_name"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="mapped_sub" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="sub_type"/>
                        <OutputClaim ClaimTypeReferenceId="org_name"/>
                        <OutputClaim ClaimTypeReferenceId="org_id"/>
                        <OutputClaim ClaimTypeReferenceId="org_ids"/>
                        <OutputClaim ClaimTypeReferenceId="scope"/>
                        <OutputClaim ClaimTypeReferenceId="tos_accepted" PartnerClaimType="terms_accepted"/>
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="OrgIdsAsStringTransformation"/>
                    </OutputClaimsTransformations>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop"/>
                </TechnicalProfile>

                <TechnicalProfile Id="validateOrganizationWhitelisted">
                    <DisplayName>Check that the organization is whitelisted</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">https://demo.energytrackandtrace.dk/api/authorization/whitelisted-organization</Item>
                        <Item Key="SendClaimsIn">Body</Item>
                        <Item Key="AuthenticationType">Bearer</Item>
                        <Item Key="UseClaimAsBearerToken">self_access_token</Item>
                        <Item Key="DebugMode">true</Item>
                        <!-- c73c2d14-4463-41f2-9e5e-aee59b2a2189 = organization is not whitelisted-->
                        <Item Key="DefaultUserMessageIfRequestFailed">c73c2d14-4463-41f2-9e5e-aee59b2a2189 - Failed to obtain whitelist information.</Item>
                        <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="self_access_token"/>
                        <InputClaim ClaimTypeReferenceId="org_cvr" />
                    </InputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop"/>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Refresh token journey</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="RefreshTokenReadAndSetup">
                    <DisplayName>Trustframework Policy Engine Refresh Token Setup Technical Profile</DisplayName>
                    <Protocol Name="None" />
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="refreshTokenIssuedOnDateTime" />

                        <!-- Additional claims -->
                        <!-- Output claims in RefreshTokenReadAndSetup must match the output claims in the OidcMockPolicyProfile -->
                        <OutputClaim ClaimTypeReferenceId="name"/>
                        <OutputClaim ClaimTypeReferenceId="org_cvr"/>
                        <OutputClaim ClaimTypeReferenceId="org_name"/>
                        <OutputClaim ClaimTypeReferenceId="org_id"/>
                        <OutputClaim ClaimTypeReferenceId="org_ids_string" PartnerClaimType="org_ids"/>
                        <OutputClaim ClaimTypeReferenceId="mapped_sub" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="scope" DefaultValue="dashboard production meters certificates wallet"/>
                        <OutputClaim ClaimTypeReferenceId="sub_type" DefaultValue="User"/>
                        <OutputClaim ClaimTypeReferenceId="tos_accepted"/>
                        <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="oid"/>
                    </OutputClaims>
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserReadUsingObjectId-CheckRefreshTokenDate">
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="refreshTokensValidFromDateTime" />
                        <OutputClaim ClaimTypeReferenceId="mapped_sub" PartnerClaimType="sub"/>
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="AssertRefreshTokenIssuedLaterThanValidFromDate" />
                    </OutputClaimsTransformations>
                    <IncludeTechnicalProfile ReferenceId="AAD-UserReadUsingObjectId" />
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserReadUsingObjectId">
                    <Metadata>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
                    </Metadata>
                    <IncludeInSso>false</IncludeInSso>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
                    </InputClaims>
                    <OutputClaims>

                        <!-- Required claims -->
                        <OutputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />

                        <!-- Optional claims -->
                        <OutputClaim ClaimTypeReferenceId="signInNames.emailAddress" />
                        <OutputClaim ClaimTypeReferenceId="displayName" />
                        <OutputClaim ClaimTypeReferenceId="otherMails" />
                        <OutputClaim ClaimTypeReferenceId="givenName" />
                        <OutputClaim ClaimTypeReferenceId="surname" />
                    </OutputClaims>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common" />
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-Common">
                    <DisplayName>Azure Active Directory</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />

                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
                    </CryptographicKeys>

                    <!-- We need this here to suppress the SelfAsserted provider from invoking SSO on validation profiles. -->
                    <IncludeInSso>false</IncludeInSso>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>
            </TechnicalProfiles>

        </ClaimsProvider>
    </ClaimsProviders>

    <UserJourneys>
        <UserJourney Id="OidcMockJourney">
            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="CombinedSignInAndSignUp">
                    <ClaimsProviderSelections>
                        <ClaimsProviderSelection TargetClaimsExchangeId="MitIDExchange"/>
                    </ClaimsProviderSelections>
                </OrchestrationStep>

                <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="MitIDExchange" TechnicalProfileReferenceId="OidcMock-OAUTH"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="3" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AADUserReadUsingAlternativeSecurityId" TechnicalProfileReferenceId="AAD-UserReadUsingAlternativeSecurityId"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="4" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                            <Value>objectId</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AADUserWrite" TechnicalProfileReferenceId="AAD-UserWriteUsingAlternativeSecurityId"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="5" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="ClientCredentialsExchange" TechnicalProfileReferenceId="clientCredentialsMethod"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="6" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AuthorizationExchange" TechnicalProfileReferenceId="authorizationMethod"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="7" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="WhitelistExchange" TechnicalProfileReferenceId="validateOrganizationWhitelisted"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="8" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer"/>
            </OrchestrationSteps>
        </UserJourney>

        <UserJourney Id="RedeemRefreshToken">
            <PreserveOriginalAssertion>false</PreserveOriginalAssertion>
            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="RefreshTokenSetupExchange" TechnicalProfileReferenceId="RefreshTokenReadAndSetup" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="CheckRefreshTokenDateFromAadExchange" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId-CheckRefreshTokenDate" />
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="3" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="ClientCredentialsExchange" TechnicalProfileReferenceId="clientCredentialsMethod"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="4" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="WhitelistExchange" TechnicalProfileReferenceId="validateOrganizationWhitelisted"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="5" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
            </OrchestrationSteps>
        </UserJourney>

    </UserJourneys>

    <RelyingParty>
        <DefaultUserJourney ReferenceId="OidcMockJourney"/>
        <Endpoints>
            <Endpoint Id="Token" UserJourneyReferenceId="RedeemRefreshToken"/>
        </Endpoints>
        <UserJourneyBehaviors>
            <JourneyInsights TelemetryEngine="ApplicationInsights" InstrumentationKey="126..."  DeveloperMode="true" ClientEnabled="true" ServerEnabled="true" TelemetryVersion="1.0.0"/>
        </UserJourneyBehaviors>
        <TechnicalProfile Id="OidcMockPolicyProfile">
            <DisplayName>OidcMock Policy Profile</DisplayName>
            <Protocol Name="OpenIdConnect"/>
            <OutputClaims>
                <!-- Output claims in the OidcMockPolicyProfile must match the output claims in RefreshTokenReadAndSetup -->
                <OutputClaim ClaimTypeReferenceId="name"/>
                <OutputClaim ClaimTypeReferenceId="org_cvr"/>
                <OutputClaim ClaimTypeReferenceId="org_name"/>
                <OutputClaim ClaimTypeReferenceId="org_id"/>
                <OutputClaim ClaimTypeReferenceId="org_ids_string" PartnerClaimType="org_ids"/>
                <OutputClaim ClaimTypeReferenceId="mapped_sub" PartnerClaimType="sub"/>
                <OutputClaim ClaimTypeReferenceId="scope" DefaultValue="dashboard production meters certificates wallet"/>
                <OutputClaim ClaimTypeReferenceId="sub_type" DefaultValue="User"/>
                <OutputClaim ClaimTypeReferenceId="tos_accepted"/>
                <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="oid"/>
            </OutputClaims>
            <SubjectNamingInfo ClaimType="sub"/>
        </TechnicalProfile>
    </RelyingParty>
</TrustFrameworkPolicy>
