<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
        PolicySchemaVersion="0.3.0.0"
        TenantId="datahubeouenerginet.onmicrosoft.com"
        PolicyId="B2C_1A_MitID"
        PublicPolicyUri="http://datahubeouenerginet.onmicrosoft.com/B2C_1A_MitID"
        DeploymentMode="Development"
        UserJourneyRecorderEndpoint="urn:journeyrecorder:applicationinsights">

    <BuildingBlocks>

        <ClaimsSchema>

            <ClaimType Id="userPrincipalName">
                <DisplayName>UserPrincipalName</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your user name as stored in the Azure Active Directory.</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_grant_type">
                <DisplayName>self_grant_type</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Grant type used for authenticating the flow itself</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_client_id">
                <DisplayName>self_client_id</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Client id for the custom policy itself</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_client_secret">
                <DisplayName>self_client_secret</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Client secret for the custom policy itself</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_scope">
                <DisplayName>self_scope</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Scope used when authenticating the custom policy itself</UserHelpText>
            </ClaimType>

            <ClaimType Id="self_access_token">
                <DisplayName>self_access_token</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Access token granted to the custom policy itself and used to call authoriation service</UserHelpText>
            </ClaimType>

            <ClaimType Id="mitid_sub">
                <DisplayName>mitid_sub</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>MitID sub claim</UserHelpText>
            </ClaimType>

            <ClaimType Id="mapped_sub">
                <DisplayName>mapped_sub</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Internal sub claim mapped by authorization service (MitID sub -> internal sub)</UserHelpText>
            </ClaimType>

            <ClaimType Id="mitid_name">
                <DisplayName>mitid_name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>MitID name claim</UserHelpText>
            </ClaimType>

            <ClaimType Id="mapped_name">
                <DisplayName>mapped_name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Internal name claim mapped by authorization service (MitID name -> internal name)</UserHelpText>
            </ClaimType>

            <ClaimType Id="org_cvr">
                <DisplayName>org_cvr</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Organization TIN (CVR in Denmark)</UserHelpText>
            </ClaimType>

            <ClaimType Id="org_name">
                <DisplayName>org_name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Organization name</UserHelpText>
            </ClaimType>

            <ClaimType Id="org_ids">
                <DisplayName>org_ids</DisplayName>
                <DataType>stringCollection</DataType>
                <UserHelpText>List of organization authorized to act on behalf of</UserHelpText>
            </ClaimType>

            <ClaimType Id="sub_type">
                <DisplayName>sub_type</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Type of subject (user, internal, external)</UserHelpText>
            </ClaimType>

            <ClaimType Id="scope">
                <DisplayName>Scope</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Scope claim returned from authorization service</UserHelpText>
            </ClaimType>

            <ClaimType Id="mitIDBearerToken">
                <DisplayName>MitIDBearerToken</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>MitID access token used to call userinfo endpoint</UserHelpText>
            </ClaimType>

            <ClaimType Id="email">
                <DisplayName>Email Address</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OpenIdConnect" PartnerClaimType="email"/>
                </DefaultPartnerClaimTypes>
                <UserHelpText>Email address returned by MitID userinfo endpoint</UserHelpText>
                <UserInputType>TextBox</UserInputType>
                <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9.!#$%&amp;&apos;^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$"/>
                </Restriction>
            </ClaimType>

            <ClaimType Id="givenName">
                <DisplayName>Given Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your given name (also known as first name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="surname">
                <DisplayName>Surname</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your surname (also known as family name or last name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="displayName">
                <DisplayName>Display Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your display name.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="objectId">
                <DisplayName>unique object Id for subject of the claims being returned</DisplayName>
                <DataType>string</DataType>
            </ClaimType>

            <ClaimType Id="issuerUserId">
                <DisplayName>Username</DisplayName>
                <DataType>string</DataType>
                <UserHelpText/>
                <UserInputType>TextBox</UserInputType>
                <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9]+[a-zA-Z0-9_-]*$"
                             HelpText="The username you provided is not valid. It must begin with an alphabet or number and can contain alphabets, numbers and the following symbols: _ -"/>
                </Restriction>
            </ClaimType>

            <ClaimType Id="identityProvider">
                <DisplayName>Identity Provider</DisplayName>
                <DataType>string</DataType>
                <UserHelpText/>
            </ClaimType>

            <ClaimType Id="authenticationSource">
                <DisplayName>AuthenticationSource</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Specifies whether the user was authenticated at Social IDP or local account.</UserHelpText>
            </ClaimType>

            <ClaimType Id="upnUserName">
                <DisplayName>UPN User Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>The user name for creating user principal name.</UserHelpText>
            </ClaimType>

            <ClaimType Id="alternativeSecurityId">
                <DisplayName>AlternativeSecurityId</DisplayName>
                <DataType>string</DataType>
                <UserHelpText/>
            </ClaimType>

            <ClaimType Id="mailNickName">
                <DisplayName>MailNickName</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your mail nick name as stored in the Azure Active Directory.</UserHelpText>
            </ClaimType>

            <ClaimType Id="newUser">
                <DisplayName>User is new or not</DisplayName>
                <DataType>boolean</DataType>
                <UserHelpText/>
            </ClaimType>
        </ClaimsSchema>

        <ClaimsTransformations>

            <ClaimsTransformation Id="CreateAlternativeSecurityId" TransformationMethod="CreateAlternativeSecurityId">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="issuerUserId" TransformationClaimType="key"/>
                    <InputClaim ClaimTypeReferenceId="identityProvider" TransformationClaimType="identityProvider"/>
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="alternativeSecurityId" TransformationClaimType="alternativeSecurityId"/>
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CreateRandomUPNUserName" TransformationMethod="CreateRandomString">
                <InputParameters>
                    <InputParameter Id="randomGeneratorType" DataType="string" Value="GUID"/>
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="upnUserName" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="CreateUserPrincipalName" TransformationMethod="FormatStringClaim">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="upnUserName" TransformationClaimType="inputClaim"/>
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="stringFormat" DataType="string" Value="cpim_{0}@{RelyingPartyTenantId}"/>
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="userPrincipalName" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>
        </ClaimsTransformations>

        <ContentDefinitions>
            <ContentDefinition Id="socialAccountsignupContentDefinition">
                <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
                <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
                <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.7</DataUri>
                <Metadata>
                    <Item Key="DisplayName">Collect information from user page alongside those from social Idp.</Item>
                </Metadata>
            </ContentDefinition>
        </ContentDefinitions>

    </BuildingBlocks>

    <ClaimsProviders>
        <ClaimsProvider>
            <DisplayName>Token Issuer</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="JwtIssuer">
                    <DisplayName>JWT Issuer</DisplayName>
                    <Protocol Name="None"/>
                    <OutputTokenFormat>JWT</OutputTokenFormat>
                    <Metadata>
                        <Item Key="client_id">{service:te}</Item>
                        <Item Key="issuer_refresh_token_user_identity_claim_type">objectId</Item>
                        <Item Key="SendTokenResponseBodyWithJsonNumbers">true</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                        <Key Id="issuer_refresh_token_key" StorageReferenceId="B2C_1A_TokenEncryptionKeyContainer"/>
                    </CryptographicKeys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <!-- The technical profile(s) defined in this section is required by the framework to be included in all custom policies. -->
            <DisplayName>Trustframework Policy Engine TechnicalProfiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="TpEngine_c3bd4fe2-1775-4013-b91d-35f16d377d13">
                    <DisplayName>Trustframework Policy Engine Default Technical Profile</DisplayName>
                    <Protocol Name="None"/>
                    <Metadata>
                        <Item Key="url">{service:te}</Item>
                    </Metadata>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Azure AD Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="AAD-UserWrite">
                    <DisplayName>Write user information to AAD</DisplayName>
                    <Protocol Name="Proprietary"
                              Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
                        <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">The account already exists. Try to create another account</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true"/>
                    </InputClaims>
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress"/>
                        <PersistedClaim ClaimTypeReferenceId="givenName"/>
                        <PersistedClaim ClaimTypeReferenceId="surname"/>
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress"/>
                    </OutputClaims>
                </TechnicalProfile>
                <TechnicalProfile Id="AAD-UserRead">
                    <DisplayName>Read user from Azure AD storage</DisplayName>
                    <Protocol Name="Proprietary"
                              Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                        <OutputClaim ClaimTypeReferenceId="displayName"/>
                    </OutputClaims>
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserWriteUsingAlternativeSecurityId">
                    <DisplayName>Azure Active Directory technical profile for handling social accounts</DisplayName>
                    <Protocol Name="Proprietary"
                              Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>

                    <Metadata>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
                    </Metadata>

                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                    </CryptographicKeys>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="alternativeSecurityId" PartnerClaimType="alternativeSecurityId" Required="true"/>
                    </InputClaims>
                    <PersistedClaims>
                        <!-- Required claims -->
                        <PersistedClaim ClaimTypeReferenceId="alternativeSecurityId"/>
                        <PersistedClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <PersistedClaim ClaimTypeReferenceId="mailNickName" DefaultValue="unknown"/>
                        <PersistedClaim ClaimTypeReferenceId="displayName" DefaultValue="unknown"/>

                        <!-- Optional claims -->
                        <PersistedClaim ClaimTypeReferenceId="givenName"/>
                        <PersistedClaim ClaimTypeReferenceId="surname"/>
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated"/>
                    </OutputClaims>
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserReadUsingAlternativeSecurityId">
                    <DisplayName>Azure Active Directory</DisplayName>
                    <Protocol Name="Proprietary"
                              Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                    </CryptographicKeys>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="alternativeSecurityId" PartnerClaimType="alternativeSecurityId" Required="true"/>
                    </InputClaims>
                    <OutputClaims>
                        <!-- Required claims -->
                        <OutputClaim ClaimTypeReferenceId="objectId"/>

                        <!-- Optional claims -->
                        <OutputClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <OutputClaim ClaimTypeReferenceId="displayName"/>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <Domain>MitID.dk</Domain>
            <DisplayName>MitID</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="MitID-OAUTH">
                    <DisplayName>MitID</DisplayName>
                    <Protocol Name="OpenIdConnect"/>
                    <Metadata>
                        <Item Key="METADATA">https://pp.netseidbroker.dk/op/.well-known/openid-configuration</Item>
                        <Item Key="client_id">627f6de4-a1fc-43ef-b811-d88391075f24</Item>
                        <Item Key="response_types">code</Item>
                        <Item Key="scope">openid ssn mitid nemlogin userinfo_token</Item>
                        <Item Key="response_mode">query</Item>
                        <Item Key="UsePolicyInRedirectUri">false</Item>
                        <Item Key="HttpBinding">POST</Item>
                        <Item Key="ClaimsEndpoint">https://pp.netseidbroker.dk/op/connect/userinfo</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="client_secret" StorageReferenceId="B2C_1A_MitIDSecretTestClient"/>
                    </CryptographicKeys>
                    <InputClaims/>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="first_name"/>
                        <OutputClaim ClaimTypeReferenceId="objectid" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="mitIDBearerToken" PartnerClaimType="{oauth2:access_token}"/>
                        <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss"/>
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName"/>
                        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName"/>
                        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId"/>
                    </OutputClaimsTransformations>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Self Asserted for social sign in</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SelfAsserted-Social">
                    <DisplayName>Collect more info during social signup</DisplayName>
                    <Protocol Name="Proprietary"
                              Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">socialAccountsignupContentDefinition</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                    </CryptographicKeys>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="displayName"/>
                        <InputClaim ClaimTypeReferenceId="givenName"/>
                        <InputClaim ClaimTypeReferenceId="surname"/>
                    </InputClaims>
                    <DisplayClaims>
                        <DisplayClaim ClaimTypeReferenceId="displayName"/>
                        <DisplayClaim ClaimTypeReferenceId="givenName"/>
                        <DisplayClaim ClaimTypeReferenceId="surname"/>
                    </DisplayClaims>

                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="newUser"/>
                        <OutputClaim ClaimTypeReferenceId="displayName"/>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                    </OutputClaims>
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="AAD-UserWriteUsingAlternativeSecurityId"/>
                    </ValidationTechnicalProfiles>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>HTTP Request Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SM-Noop">
                    <DisplayName>Noop Session Management Provider</DisplayName>
                    <Protocol Name="Proprietary"
                              Handler="Web.TPEngine.SSO.NoopSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                </TechnicalProfile>
                <TechnicalProfile Id="restMethod">
                    <DisplayName>Check that the user has entered a valid access code by using Claims Transformations</DisplayName>
                    <Protocol Name="Proprietary"
                              Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ServiceUrl">https://eo-alerts-apim.azure-api.net/mitid_userinfo_token/op/connect/userinfo</Item>
                        <Item Key="AuthenticationType">Bearer</Item>
                        <Item Key="UseClaimAsBearerToken">mitIDBearerToken</Item>
                        <Item Key="DebugMode">true</Item>
                        <Item Key="AllowInsecureAuthInProduction">true</Item>
                        <Item Key="DefaultUserMessageIfRequestFailed">User info request failed.</Item>
                        <Item Key="SendClaimsIn">QueryString</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="mitIDBearerToken"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="mitid_sub" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="mitid_name" PartnerClaimType="nemlogin_name"/>
                        <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="nemlogin_email"/>
                        <OutputClaim ClaimTypeReferenceId="org_cvr" PartnerClaimType="nemlogin_cvr"/>
                        <OutputClaim ClaimTypeReferenceId="org_name" PartnerClaimType="nemlogin_org_name"/>
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop"/>
                </TechnicalProfile>

                <TechnicalProfile Id="clientCredentialsMethod">
                    <DisplayName>Check that the user has entered a valid access code by using Claims Transformations</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">https://login.microsoftonline.com/d3803538-de83-47f3-bc72-54843a8592f2/oauth2/v2.0/token</Item>
                        <Item Key="SendClaimsIn">Form</Item>
                        <Item Key="AuthenticationType">None</Item>
                        <Item Key="DebugMode">true</Item>
                        <Item Key="DefaultUserMessageIfRequestFailed">Failed to obtain authorization information.</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="self_grant_type" PartnerClaimType="grant_type" DefaultValue="client_credentials"/>
                        <InputClaim ClaimTypeReferenceId="self_client_id" PartnerClaimType="client_id" DefaultValue="f00b9b4d-3c59-4c40-b209-2ef87e509f54"/>
                        <InputClaim ClaimTypeReferenceId="self_client_secret" PartnerClaimType="client_secret" DefaultValue="HLW..."/>
                        <InputClaim ClaimTypeReferenceId="self_scope" PartnerClaimType="scope" DefaultValue="https://datahubeouenerginet.onmicrosoft.com/energy-origin/.default"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="self_access_token" PartnerClaimType="access_token"/>
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>

                <TechnicalProfile Id="authorizationMethod">
                    <DisplayName>Check that the user has entered a valid access code by using Claims Transformations</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">https://authstage.at.energioprindelse.dk/api/authorization/user-consent</Item>
                        <Item Key="SendClaimsIn">Body</Item>
                        <Item Key="AuthenticationType">Bearer</Item>
                        <Item Key="UseClaimAsBearerToken">self_access_token</Item>
                        <Item Key="DebugMode">true</Item>
                        <Item Key="DefaultUserMessageIfRequestFailed">Failed to obtain authorization information.</Item>
                        <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="self_access_token"/>
                        <InputClaim ClaimTypeReferenceId="mitid_sub" PartnerClaimType="sub"/>
                        <InputClaim ClaimTypeReferenceId="mitid_name" PartnerClaimType="name"/>
                        <InputClaim ClaimTypeReferenceId="org_cvr"/>
                        <InputClaim ClaimTypeReferenceId="org_name"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="mapped_sub" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="mapped_name" PartnerClaimType="name"/>
                        <OutputClaim ClaimTypeReferenceId="sub_type"/>
                        <OutputClaim ClaimTypeReferenceId="org_name"/>
                        <OutputClaim ClaimTypeReferenceId="org_ids"/>
                        <OutputClaim ClaimTypeReferenceId="scope"/>
                    </OutputClaims>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

    </ClaimsProviders>

    <UserJourneys>
        <UserJourney Id="MitIdJourney">
            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="CombinedSignInAndSignUp">
                    <ClaimsProviderSelections>
                        <ClaimsProviderSelection TargetClaimsExchangeId="MitIDExchange"/>
                    </ClaimsProviderSelections>
                </OrchestrationStep>

                <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="MitIDExchange" TechnicalProfileReferenceId="MitID-OAUTH"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="3" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AADUserReadUsingAlternativeSecurityId"
                                        TechnicalProfileReferenceId="AAD-UserReadUsingAlternativeSecurityId"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="4" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                            <Value>objectId</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="SelfAsserted-Social" TechnicalProfileReferenceId="SelfAsserted-Social"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="5" Type="ClaimsExchange">
                    <Preconditions>
                        <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                            <Value>objectId</Value>
                            <Action>SkipThisOrchestrationStep</Action>
                        </Precondition>
                    </Preconditions>
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AADUserWrite" TechnicalProfileReferenceId="AAD-UserWriteUsingAlternativeSecurityId"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="6" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="RestMethodExample" TechnicalProfileReferenceId="restMethod"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="7" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="ClientCredentialsExchange" TechnicalProfileReferenceId="clientCredentialsMethod"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="8" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="AuthorizationExchange" TechnicalProfileReferenceId="authorizationMethod"/>
                    </ClaimsExchanges>
                </OrchestrationStep>

                <OrchestrationStep Order="9" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer"/>
            </OrchestrationSteps>
        </UserJourney>
    </UserJourneys>

    <RelyingParty>
        <DefaultUserJourney ReferenceId="MitIdJourney"/>
        <UserJourneyBehaviors>
            <JourneyInsights TelemetryEngine="ApplicationInsights" InstrumentationKey="126..." DeveloperMode="true"
                             ClientEnabled="true" ServerEnabled="true" TelemetryVersion="1.0.0"/>
        </UserJourneyBehaviors>
        <TechnicalProfile Id="HelloWorldPolicyProfile">
            <DisplayName>Hello World Policy Profile</DisplayName>
            <Protocol Name="OpenIdConnect"/>
            <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="mapped_name" PartnerClaimType="name"/>
                <OutputClaim ClaimTypeReferenceId="email"/>
                <OutputClaim ClaimTypeReferenceId="org_cvr"/>
                <OutputClaim ClaimTypeReferenceId="org_name"/>
                <OutputClaim ClaimTypeReferenceId="org_ids"/>
                <OutputClaim ClaimTypeReferenceId="mapped_sub" PartnerClaimType="sub"/>
                <OutputClaim ClaimTypeReferenceId="scope"/>
            </OutputClaims>
            <SubjectNamingInfo ClaimType="sub"/>
        </TechnicalProfile>
    </RelyingParty>
</TrustFrameworkPolicy>
