services:
  db:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: Database
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.admin
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090" # Prometheus UI port

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true # This will enable you to use a generic OTLP exporter instead of a specific one for Jaeger.
#      - METRICS_STORAGE_TYPE=prometheus
    ports:
      - "16686:16686" # Jaeger UI port
      - "4317" # OTLP gRPC default port
#      - "14268"
#      - "14250"

  collector:
    image: otel/opentelemetry-collector:latest
    container_name: collector
    command: ["--config=/conf/collector-config.yaml"]
    volumes:
      - ./collector-config.yaml:/conf/collector-config.yaml
    ports:
      - "9464" # Default OpenTelemetry Prometheus exporter port
      - "4317:4317" # OTLP gRPC receiver port
      - "4318:4318" # OTLP http receiver port
#      - "8888:8888" # Prometheus metrics exposed by the collector port (?)
#      - "8889:8889" # Prometheus exporter metrics port (?)
#      - "13133:13133" # health_check extension (?)
    depends_on:
      - jaeger

  # Should we set Grafana up here as well?

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./dashboard.yaml:/etc/grafana/dashboards/dashboard.yaml
      - ./dotnet-otel-dashboard.json:/etc/grafana/dashboards/dotnet-otel-dashboard.json
      - ./logs-dashboard.json:/etc/grafana/dashboards/logs-dashboard.json
    ports:
      - "3000:3000"

volumes:
  postgres:
  pgadmin:
