apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-api
  name: {{ .Release.Name }}-api
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-api
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-api
    spec:
      volumes:
        - name: migrations
          configMap:
            name: {{ .Release.Name }}-api-init-db-cm
      initContainers:
        - name: {{ .Release.Name }}-api-init-db
          image: postgres:alpine3.17
          command:
            - /bin/sh
          args:
            - -e
            - /sql/run.sh
          {{- if .Values.api.setup.database}}
          env:
          {{- range $name, $value := .Values.api.setup.database }}
            - name: {{ $name }}
              value: {{ $value | quote }}
          {{- end}}
          {{- end}}
          volumeMounts:
            - name: migrations
              mountPath: /sql
              readOnly: true
      containers:
        - name: {{ .Release.Name }}-api
          image: '{{ .Values.api.image.name }}:{{ .Values.api.image.tag }}'
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          env:
            - name: Database__Name
              value: auth-database
            - name: Database__User
              value: auth
          {{- if .Values.api.env}}
          {{- range $name, $value := .Values.api.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
          {{- end}}
          {{- end}}
