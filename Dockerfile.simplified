# syntax=docker/dockerfile:1.5
ARG SDK_VERSION=9.0.301
ARG RUNTIME_VERSION=9.0.6
FROM mcr.microsoft.com/dotnet/aspnet:${RUNTIME_VERSION}-azurelinux3.0-distroless-extra AS base

FROM mcr.microsoft.com/dotnet/sdk:${SDK_VERSION}-noble AS build
ARG PROJECT
ARG MIGRATIONS
WORKDIR /src/

COPY Directory.Build.targets Directory.Packages.props global.json ./
COPY domains/global.json ./domains/

COPY *.sln ./

COPY domains/ ./domains/
RUN find domains -name "*.csproj" -exec cp {} . \; || true
RUN find domains -name "Directory.Build.props" -exec cp {} . \; || true
RUN find domains -name "Directory.Build.targets" -exec cp {} . \; || true

RUN --mount=type=cache,target=/root/.nuget/packages \
    --mount=type=cache,target=/root/.local/share/NuGet \
    dotnet restore

RUN --mount=type=cache,target=/root/.nuget/packages \
    --mount=type=cache,target=/root/.local/share/NuGet \
    dotnet tool restore || true

COPY --link . .

RUN <<EOR
grep -q "<AssemblyName>" ${PROJECT}
if [ $? -eq 0 ]; then
    sed -i ${PROJECT} -e "s|<AssemblyName>.*</AssemblyName>|<AssemblyName>main</AssemblyName>|"
else
    sed -i ${PROJECT} -e "s|</PropertyGroup>|<AssemblyName>main</AssemblyName></PropertyGroup>|"
fi
EOR

RUN --mount=type=cache,target=/root/.nuget/packages \
    --mount=type=cache,target=/root/.local/share/NuGet \
    --mount=type=cache,target=/src/obj \
    dotnet publish ${PROJECT} -c Release -o /app/publish --no-restore

WORKDIR /app/publish
RUN rm -f appsettings.json appsettings.*.json || true
RUN <<EOR
mkdir /app/migrations
if [ ! -z ${MIGRATIONS} ]; then
    cp -v /src/${MIGRATIONS} /app/migrations
fi
EOR

FROM base AS final
WORKDIR /app
COPY --from=build /app/publish .
COPY --from=build /app/migrations /migrations/
COPY --from=busybox:uclibc /bin/cp /bin/cp
COPY --from=busybox:uclibc /bin/cat /bin/cat
COPY --from=busybox:uclibc /bin/ls /bin/ls
EXPOSE 8080
EXPOSE 8081
ENTRYPOINT ["/app/main"]
